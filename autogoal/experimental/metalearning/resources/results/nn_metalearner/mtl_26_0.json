{"failed_pipelines": 41, "scores": [0.0, 0.0, 0.6522633744855967, -Infinity, -Infinity, 0.3279320987654321, 0.6522633744855967, 0.654835390946502, 0.3343621399176955, 0.3279320987654321, 0.3325617283950617, 0.3279320987654321, 0.6527777777777778, 0.0, 0.7626028806584362, 0.25051440329218105, 0.0, -Infinity, 0.9063786008230452, 0.9063786008230452, 0.3279320987654321, -Infinity, -Infinity, 0.536522633744856, 0.6522633744855967, 0.0, 0.3279320987654321, 0.7556584362139918, 0.0, -Infinity, -Infinity, -Infinity, 0.6661522633744856, 0.3279320987654321, 0.0, -Infinity, 0.9063786008230452, 0.6522633744855967, 0.9063786008230452, -Infinity, -Infinity, 0.7551440329218106, 0.6406893004115226, 0.9434156378600823, -Infinity, 0.9063786008230452, -Infinity, 0.9063786008230452, 0.33204732510288065, -Infinity, -Infinity, 0.7541152263374485, -Infinity, 0.33281893004115226, 0.720679012345679, 0.0, 0.6522633744855967, -Infinity, 0.0, -Infinity, 0.3343621399176955, 0.6916152263374485, -Infinity, -Infinity, 0.9063786008230452, 0.3279320987654321, 0.7541152263374485, 0.720679012345679, 0.9063786008230452, 0.6952160493827161, -Infinity, 0.3279320987654321, 0.3279320987654321, 0.0, -Infinity, 0.3317901234567901, 0.9521604938271605, 0.7579732510288066, 0.3387345679012346, -Infinity, 0.7677469135802469, 0.9444444444444444, 0.6728395061728395, -Infinity, 0.0, -Infinity, 0.0, 0.0, 0.7662037037037037, -Infinity, 0.6728395061728395, 0.7579732510288066, 0.0, -Infinity], "pipelines": [{"KMeans": [1], "End": [1], "KMeans_n_clusters": [15], "KMeans_init": [0], "KMeans_precompute_distances": [0]}, {"KNNImputer": [1], "RadiusNeighborsTransformer": [1], "MiniBatchKMeans": [1], "End": [1], "KNNImputer_n_neighbors": [7], "KNNImputer_weights": [0], "KNNImputer_metric": [0], "KNNImputer_add_indicator": [true], "RadiusNeighborsTransformer_mode": [0], "RadiusNeighborsTransformer_radius": [-9.995], "RadiusNeighborsTransformer_algorithm": [0], "RadiusNeighborsTransformer_leaf_size": [55], "RadiusNeighborsTransformer_p": [1], "MiniBatchKMeans_n_clusters": [15], "MiniBatchKMeans_init": [0], "MiniBatchKMeans_compute_labels": [true], "MiniBatchKMeans_tol": [-0.992], "MiniBatchKMeans_max_no_improvement": [19], "MiniBatchKMeans_reassignment_ratio": [0.094]}, {"KNeighborsTransformer": [1], "MultinomialNB": [1], "End": [1], "KNeighborsTransformer_mode": [1], "KNeighborsTransformer_n_neighbors": [1], "KNeighborsTransformer_algorithm": [1], "KNeighborsTransformer_leaf_size": [59], "KNeighborsTransformer_p": [1], "MultinomialNB_fit_prior": [false]}, {"LatentDirichletAllocation": [1], "ComplementNB": [1], "End": [1], "ComplementNB_fit_prior": [true], "ComplementNB_norm": [false]}, {"MiniBatchSparsePCA": [1], "Perceptron": [1], "End": [1], "MiniBatchSparsePCA_ridge_alpha": [-0.017902511309715416], "MiniBatchSparsePCA_n_iter": [159], "MiniBatchSparsePCA_batch_size": [5], "MiniBatchSparsePCA_shuffle": [false], "MiniBatchSparsePCA_method": [1], "Perceptron_fit_intercept": [false], "Perceptron_tol": [0.001], "Perceptron_shuffle": [false], "Perceptron_eta0": [9.991], "Perceptron_early_stopping": [true], "Perceptron_validation_fraction": [0.6074917890614662], "Perceptron_n_iter_no_change": [1]}, {"ExtraTreeClassifier": [1], "End": [1], "ExtraTreeClassifier_min_samples_split": [3], "ExtraTreeClassifier_min_weight_fraction_leaf": [0.0], "ExtraTreeClassifier_min_impurity_decrease": [0.0], "ExtraTreeClassifier_ccp_alpha": [0.992]}, {"MultinomialNB": [1], "End": [1], "MultinomialNB_fit_prior": [false]}, {"PassiveAggressiveClassifier": [1], "End": [1], "PassiveAggressiveClassifier_C": [6.69145345297223], "PassiveAggressiveClassifier_fit_intercept": [true], "PassiveAggressiveClassifier_tol": [0.001], "PassiveAggressiveClassifier_early_stopping": [false], "PassiveAggressiveClassifier_validation_fraction": [0.3569025915465777], "PassiveAggressiveClassifier_n_iter_no_change": [9], "PassiveAggressiveClassifier_shuffle": [false], "PassiveAggressiveClassifier_average": [false]}, {"BernoulliNB": [1], "End": [1], "BernoulliNB_alpha": [9.991], "BernoulliNB_binarize": [-0.16982739008025147], "BernoulliNB_fit_prior": [true]}, {"ExtraTreeClassifier": [1], "End": [1], "ExtraTreeClassifier_min_samples_split": [3], "ExtraTreeClassifier_min_weight_fraction_leaf": [0.0], "ExtraTreeClassifier_min_impurity_decrease": [0.0], "ExtraTreeClassifier_ccp_alpha": [0.992]}, {"SparsePCA": [1], "DecisionTreeClassifier": [1], "End": [1], "SparsePCA_ridge_alpha": [0.03681846705741536], "SparsePCA_method": [0], "DecisionTreeClassifier_min_samples_split": [2], "DecisionTreeClassifier_min_weight_fraction_leaf": [0.0], "DecisionTreeClassifier_min_impurity_decrease": [0.4552573957735166], "DecisionTreeClassifier_ccp_alpha": [0.992]}, {"DecisionTreeClassifier": [1], "End": [1], "DecisionTreeClassifier_min_samples_split": [2], "DecisionTreeClassifier_min_weight_fraction_leaf": [0.0], "DecisionTreeClassifier_min_impurity_decrease": [0.4552573957735166], "DecisionTreeClassifier_ccp_alpha": [0.992]}, {"ComplementNB": [1], "End": [1], "ComplementNB_fit_prior": [true], "ComplementNB_norm": [true]}, {"Birch": [1], "End": [1], "Birch_threshold": [-2.4771467529368474], "Birch_branching_factor": [2], "Birch_n_clusters": [4], "Birch_compute_labels": [true]}, {"MinMaxScaler": [1], "LinearSVC": [1], "End": [1], "LinearSVC_penalty": [0], "LinearSVC_loss": [1], "LinearSVC_dual": [true], "LinearSVC_C": [0.005], "LinearSVC_multi_class": [1], "LinearSVC_fit_intercept": [true]}, {"SGDClassifier": [1], "End": [1], "SGDClassifier_loss": [8], "SGDClassifier_penalty": [1], "SGDClassifier_l1_ratio": [0.001], "SGDClassifier_fit_intercept": [false], "SGDClassifier_tol": [-0.005], "SGDClassifier_shuffle": [false], "SGDClassifier_epsilon": [-0.992], "SGDClassifier_learning_rate": [0], "SGDClassifier_eta0": [0.992], "SGDClassifier_power_t": [4.991], "SGDClassifier_early_stopping": [false], "SGDClassifier_validation_fraction": [0.993], "SGDClassifier_n_iter_no_change": [3], "SGDClassifier_average": [true]}, {"MinMaxScaler": [1], "MiniBatchKMeans": [1], "End": [1], "MiniBatchKMeans_n_clusters": [15], "MiniBatchKMeans_init": [0], "MiniBatchKMeans_compute_labels": [false], "MiniBatchKMeans_tol": [-0.992], "MiniBatchKMeans_max_no_improvement": [17], "MiniBatchKMeans_reassignment_ratio": [-0.093]}, {"RadiusNeighborsTransformer": [1], "SVC": [1], "End": [1], "RadiusNeighborsTransformer_mode": [1], "RadiusNeighborsTransformer_radius": [9.991], "RadiusNeighborsTransformer_algorithm": [1], "RadiusNeighborsTransformer_leaf_size": [56], "RadiusNeighborsTransformer_p": [1], "SVC_C": [0.005], "SVC_degree": [3], "SVC_gamma": [1], "SVC_coef0": [-0.031074917359911115], "SVC_shrinking": [true], "SVC_probability": [false], "SVC_cache_size": [399], "SVC_decision_function_shape": [0], "SVC_break_ties": [true]}, {"CategoricalNB": [1], "End": [1], "CategoricalNB_fit_prior": [true]}, {"CategoricalNB": [1], "End": [1], "CategoricalNB_fit_prior": [true]}, {"TfidfTransformer": [1], "DecisionTreeClassifier": [1], "End": [1], "TfidfTransformer_norm": [1], "TfidfTransformer_use_idf": [false], "TfidfTransformer_smooth_idf": [true], "TfidfTransformer_sublinear_tf": [false], "DecisionTreeClassifier_min_samples_split": [2], "DecisionTreeClassifier_min_weight_fraction_leaf": [0.5], "DecisionTreeClassifier_min_impurity_decrease": [0.0766417984145853], "DecisionTreeClassifier_ccp_alpha": [0.1817591974500115]}, {"KernelPCA": [1], "NuSVC": [1], "End": [1], "KernelPCA_degree": [5], "KernelPCA_alpha": [9.991], "KernelPCA_fit_inverse_transform": [true], "KernelPCA_eigen_solver": [0], "KernelPCA_tol": [99], "KernelPCA_remove_zero_eig": [false], "NuSVC_kernel": [3], "NuSVC_degree": [1], "NuSVC_gamma": [0], "NuSVC_coef0": [0.992], "NuSVC_shrinking": [false], "NuSVC_probability": [true], "NuSVC_cache_size": [399], "NuSVC_decision_function_shape": [1], "NuSVC_break_ties": [false]}, {"LocallyLinearEmbedding": [1], "MultinomialNB": [1], "End": [1], "LocallyLinearEmbedding_n_neighbors": [1], "LocallyLinearEmbedding_n_components": [2], "LocallyLinearEmbedding_reg": [-0.005], "LocallyLinearEmbedding_eigen_solver": [2], "LocallyLinearEmbedding_method": [1], "LocallyLinearEmbedding_neighbors_algorithm": [1], "MultinomialNB_fit_prior": [false]}, {"MiniBatchSparsePCA": [1], "KNeighborsTransformer": [1], "NearestCentroid": [1], "End": [1], "MiniBatchSparsePCA_ridge_alpha": [-0.017902511309715416], "MiniBatchSparsePCA_n_iter": [159], "MiniBatchSparsePCA_batch_size": [5], "MiniBatchSparsePCA_shuffle": [false], "MiniBatchSparsePCA_method": [1], "KNeighborsTransformer_mode": [1], "KNeighborsTransformer_n_neighbors": [1], "KNeighborsTransformer_algorithm": [1], "KNeighborsTransformer_leaf_size": [1], "KNeighborsTransformer_p": [1]}, {"TfidfTransformer": [1], "MultinomialNB": [1], "End": [1], "TfidfTransformer_norm": [1], "TfidfTransformer_use_idf": [false], "TfidfTransformer_smooth_idf": [true], "TfidfTransformer_sublinear_tf": [true], "MultinomialNB_fit_prior": [false]}, {"NMF": [1], "OneClassSVM": [1], "End": [1], "NMF_alpha": [0.0], "NMF_l1_ratio": [0.0], "NMF_shuffle": [false], "OneClassSVM_kernel": [1], "OneClassSVM_degree": [4], "OneClassSVM_gamma": [1], "OneClassSVM_coef0": [-0.992], "OneClassSVM_shrinking": [false], "OneClassSVM_cache_size": [399]}, {"RobustScaler": [1], "DecisionTreeClassifier": [1], "End": [1], "RobustScaler_with_centering": [false], "RobustScaler_with_scaling": [false], "DecisionTreeClassifier_min_samples_split": [2], "DecisionTreeClassifier_min_weight_fraction_leaf": [0.0], "DecisionTreeClassifier_min_impurity_decrease": [0.4552573957735166], "DecisionTreeClassifier_ccp_alpha": [0.992]}, {"MiniBatchSparsePCA": [1], "LinearSVC": [1], "End": [1], "MiniBatchSparsePCA_ridge_alpha": [-0.017902511309715416], "MiniBatchSparsePCA_n_iter": [159], "MiniBatchSparsePCA_batch_size": [5], "MiniBatchSparsePCA_shuffle": [false], "MiniBatchSparsePCA_method": [1], "LinearSVC_penalty": [0], "LinearSVC_loss": [0], "LinearSVC_dual": [true], "LinearSVC_C": [0.005], "LinearSVC_multi_class": [0], "LinearSVC_fit_intercept": [true]}, {"KBinsDiscretizer": [1], "OneClassSVM": [1], "End": [1], "KBinsDiscretizer_n_bins": [6], "KBinsDiscretizer_encode": [1], "KBinsDiscretizer_strategy": [2], "OneClassSVM_kernel": [1], "OneClassSVM_degree": [3], "OneClassSVM_gamma": [0], "OneClassSVM_coef0": [-0.992], "OneClassSVM_shrinking": [false], "OneClassSVM_cache_size": [1]}, {"AffinityPropagation": [1], "End": [1], "AffinityPropagation_convergence_iter": [9], "AffinityPropagation_affinity": [0]}, {"LogisticRegression": [1], "End": [1], "LogisticRegression_penalty": [1], "LogisticRegression_dual": [true], "LogisticRegression_C": [5.703248297169709], "LogisticRegression_fit_intercept": [false], "LogisticRegression_solver": [0], "LogisticRegression_multi_class": [0]}, {"FastICA": [1], "LogisticRegression": [1], "End": [1], "FastICA_algorithm": [0], "FastICA_whiten": [false], "FastICA_fun": [2], "LogisticRegression_penalty": [1], "LogisticRegression_dual": [true], "LogisticRegression_C": [0.005], "LogisticRegression_fit_intercept": [true], "LogisticRegression_solver": [2], "LogisticRegression_multi_class": [2]}, {"NMF": [1], "NearestCentroid": [1], "End": [1], "NMF_alpha": [0.0], "NMF_l1_ratio": [0.0], "NMF_shuffle": [true]}, {"DecisionTreeClassifier": [1], "End": [1], "DecisionTreeClassifier_min_samples_split": [2], "DecisionTreeClassifier_min_weight_fraction_leaf": [0.0], "DecisionTreeClassifier_min_impurity_decrease": [0.4552573957735166], "DecisionTreeClassifier_ccp_alpha": [0.992]}, {"KNNImputer": [1], "KMeans": [1], "End": [1], "KNNImputer_n_neighbors": [9], "KNNImputer_weights": [0], "KNNImputer_metric": [0], "KNNImputer_add_indicator": [true], "KMeans_n_clusters": [1], "KMeans_init": [0], "KMeans_precompute_distances": [0]}, {"PowerTransformer": [1], "TfidfTransformer": [1], "Perceptron": [1], "End": [1], "PowerTransformer_standardize": [false], "TfidfTransformer_norm": [1], "TfidfTransformer_use_idf": [false], "TfidfTransformer_smooth_idf": [true], "TfidfTransformer_sublinear_tf": [true], "Perceptron_fit_intercept": [false], "Perceptron_tol": [-0.0017033901186922073], "Perceptron_shuffle": [true], "Perceptron_eta0": [0.005], "Perceptron_early_stopping": [true], "Perceptron_validation_fraction": [0.006], "Perceptron_n_iter_no_change": [5]}, {"CategoricalNB": [1], "End": [1], "CategoricalNB_fit_prior": [true]}, {"MultinomialNB": [1], "End": [1], "MultinomialNB_fit_prior": [false]}, {"CategoricalNB": [1], "End": [1], "CategoricalNB_fit_prior": [true]}, {"LogisticRegression": [1], "End": [1], "LogisticRegression_penalty": [1], "LogisticRegression_dual": [true], "LogisticRegression_C": [9.991], "LogisticRegression_fit_intercept": [true], "LogisticRegression_solver": [0], "LogisticRegression_multi_class": [0]}, {"AffinityPropagation": [1], "End": [1], "AffinityPropagation_convergence_iter": [29], "AffinityPropagation_affinity": [0]}, {"FastICA": [1], "RidgeClassifier": [1], "End": [1], "FastICA_algorithm": [0], "FastICA_whiten": [false], "FastICA_fun": [0], "RidgeClassifier_alpha": [7.130745398756142], "RidgeClassifier_fit_intercept": [true], "RidgeClassifier_normalize": [false], "RidgeClassifier_tol": [0.001], "RidgeClassifier_solver": [2]}, {"GaussianNB": [1], "End": [1]}, {"MiniBatchSparsePCA": [1], "SVC": [1], "End": [1], "MiniBatchSparsePCA_ridge_alpha": [-0.017902511309715412], "MiniBatchSparsePCA_n_iter": [158], "MiniBatchSparsePCA_batch_size": [5], "MiniBatchSparsePCA_shuffle": [false], "MiniBatchSparsePCA_method": [1], "SVC_C": [8.431154952191951], "SVC_degree": [1], "SVC_gamma": [0], "SVC_coef0": [-0.33276013426298856], "SVC_shrinking": [true], "SVC_probability": [true], "SVC_cache_size": [1], "SVC_decision_function_shape": [1], "SVC_break_ties": [true]}, {"MiniBatchSparsePCA": [1], "TfidfTransformer": [1], "ComplementNB": [1], "End": [1], "MiniBatchSparsePCA_ridge_alpha": [-0.017902511309715412], "MiniBatchSparsePCA_n_iter": [158], "MiniBatchSparsePCA_batch_size": [5], "MiniBatchSparsePCA_shuffle": [false], "MiniBatchSparsePCA_method": [1], "TfidfTransformer_norm": [1], "TfidfTransformer_use_idf": [false], "TfidfTransformer_smooth_idf": [true], "TfidfTransformer_sublinear_tf": [true], "ComplementNB_fit_prior": [true], "ComplementNB_norm": [true]}, {"CategoricalNB": [1], "End": [1], "CategoricalNB_fit_prior": [true]}, {"FastICA": [1], "ComplementNB": [1], "End": [1], "FastICA_algorithm": [0], "FastICA_whiten": [false], "FastICA_fun": [0], "ComplementNB_fit_prior": [false], "ComplementNB_norm": [true]}, {"CategoricalNB": [1], "End": [1], "CategoricalNB_fit_prior": [true]}, {"NMF": [1], "CategoricalNB": [1], "End": [1], "NMF_alpha": [0.0], "NMF_l1_ratio": [0.0], "NMF_shuffle": [true], "CategoricalNB_fit_prior": [true]}, {"Isomap": [1], "CategoricalNB": [1], "End": [1], "Isomap_n_neighbors": [1], "Isomap_n_components": [3], "Isomap_eigen_solver": [1], "Isomap_tol": [-54], "Isomap_path_method": [0], "Isomap_neighbors_algorithm": [3], "Isomap_p": [1], "CategoricalNB_fit_prior": [true]}, {"LocallyLinearEmbedding": [1], "DecisionTreeClassifier": [1], "End": [1], "LocallyLinearEmbedding_n_neighbors": [1], "LocallyLinearEmbedding_n_components": [1], "LocallyLinearEmbedding_reg": [-0.002754862265074334], "LocallyLinearEmbedding_eigen_solver": [1], "LocallyLinearEmbedding_method": [2], "LocallyLinearEmbedding_neighbors_algorithm": [1], "DecisionTreeClassifier_min_samples_split": [2], "DecisionTreeClassifier_min_weight_fraction_leaf": [0.0], "DecisionTreeClassifier_min_impurity_decrease": [0.4552573957735166], "DecisionTreeClassifier_ccp_alpha": [0.992]}, {"RobustScaler": [1], "LinearSVC": [1], "End": [1], "RobustScaler_with_centering": [false], "RobustScaler_with_scaling": [false], "LinearSVC_penalty": [0], "LinearSVC_loss": [1], "LinearSVC_dual": [true], "LinearSVC_C": [0.005], "LinearSVC_multi_class": [0], "LinearSVC_fit_intercept": [true]}, {"LogisticRegression": [1], "End": [1], "LogisticRegression_penalty": [1], "LogisticRegression_dual": [true], "LogisticRegression_C": [0.005], "LogisticRegression_fit_intercept": [false], "LogisticRegression_solver": [0], "LogisticRegression_multi_class": [0]}, {"NMF": [1], "DecisionTreeClassifier": [1], "End": [1], "NMF_alpha": [0.0], "NMF_l1_ratio": [0.0], "NMF_shuffle": [false], "DecisionTreeClassifier_min_samples_split": [2], "DecisionTreeClassifier_min_weight_fraction_leaf": [0.0], "DecisionTreeClassifier_min_impurity_decrease": [0.4552573957735166], "DecisionTreeClassifier_ccp_alpha": [0.992]}, {"RadiusNeighborsTransformer": [1], "RidgeClassifier": [1], "End": [1], "RadiusNeighborsTransformer_mode": [0], "RadiusNeighborsTransformer_radius": [9.991], "RadiusNeighborsTransformer_algorithm": [0], "RadiusNeighborsTransformer_leaf_size": [33], "RadiusNeighborsTransformer_p": [1], "RidgeClassifier_alpha": [1.5803332112240898], "RidgeClassifier_fit_intercept": [false], "RidgeClassifier_normalize": [false], "RidgeClassifier_tol": [-0.005], "RidgeClassifier_solver": [6]}, {"MiniBatchSparsePCA": [1], "MeanShift": [1], "End": [1], "MiniBatchSparsePCA_ridge_alpha": [-0.017902511309715412], "MiniBatchSparsePCA_n_iter": [158], "MiniBatchSparsePCA_batch_size": [5], "MiniBatchSparsePCA_shuffle": [false], "MiniBatchSparsePCA_method": [1], "MeanShift_bin_seeding": [true], "MeanShift_cluster_all": [false]}, {"MultinomialNB": [1], "End": [1], "MultinomialNB_fit_prior": [false]}, {"PCA": [1], "LinearSVC": [1], "End": [1], "PCA_whiten": [true], "PCA_svd_solver": [3], "PCA_tol": [0.992], "PCA_iterated_power": [1], "LinearSVC_penalty": [0], "LinearSVC_loss": [0], "LinearSVC_dual": [true], "LinearSVC_C": [0.005], "LinearSVC_multi_class": [1], "LinearSVC_fit_intercept": [true]}, {"PowerTransformer": [1], "MiniBatchKMeans": [1], "End": [1], "PowerTransformer_standardize": [true], "MiniBatchKMeans_n_clusters": [1], "MiniBatchKMeans_init": [0], "MiniBatchKMeans_compute_labels": [true], "MiniBatchKMeans_tol": [0.992], "MiniBatchKMeans_max_no_improvement": [7], "MiniBatchKMeans_reassignment_ratio": [-0.05718810278677689]}, {"MeanShift": [1], "End": [1], "MeanShift_bin_seeding": [false], "MeanShift_cluster_all": [true]}, {"RadiusNeighborsTransformer": [1], "BernoulliNB": [1], "End": [1], "RadiusNeighborsTransformer_mode": [1], "RadiusNeighborsTransformer_radius": [9.991], "RadiusNeighborsTransformer_algorithm": [2], "RadiusNeighborsTransformer_leaf_size": [57], "RadiusNeighborsTransformer_p": [1], "BernoulliNB_alpha": [0.0], "BernoulliNB_binarize": [-0.992], "BernoulliNB_fit_prior": [true]}, {"PowerTransformer": [1], "NearestCentroid": [1], "End": [1], "PowerTransformer_standardize": [true]}, {"SparsePCA": [1], "TfidfTransformer": [1], "LogisticRegression": [1], "End": [1], "SparsePCA_ridge_alpha": [0.03681846705741536], "SparsePCA_method": [0], "TfidfTransformer_norm": [1], "TfidfTransformer_use_idf": [false], "TfidfTransformer_smooth_idf": [true], "TfidfTransformer_sublinear_tf": [true], "LogisticRegression_penalty": [0], "LogisticRegression_dual": [true], "LogisticRegression_C": [7.709112261550142], "LogisticRegression_fit_intercept": [true], "LogisticRegression_solver": [0], "LogisticRegression_multi_class": [0]}, {"LocallyLinearEmbedding": [1], "MiniBatchKMeans": [1], "End": [1], "LocallyLinearEmbedding_n_neighbors": [1], "LocallyLinearEmbedding_n_components": [1], "LocallyLinearEmbedding_reg": [-0.004143680597817035], "LocallyLinearEmbedding_eigen_solver": [0], "LocallyLinearEmbedding_method": [1], "LocallyLinearEmbedding_neighbors_algorithm": [2], "MiniBatchKMeans_n_clusters": [15], "MiniBatchKMeans_init": [0], "MiniBatchKMeans_compute_labels": [true], "MiniBatchKMeans_tol": [-0.992], "MiniBatchKMeans_max_no_improvement": [11], "MiniBatchKMeans_reassignment_ratio": [0.017609475478002436]}, {"CategoricalNB": [1], "End": [1], "CategoricalNB_fit_prior": [true]}, {"PowerTransformer": [1], "DecisionTreeClassifier": [1], "End": [1], "PowerTransformer_standardize": [true], "DecisionTreeClassifier_min_samples_split": [2], "DecisionTreeClassifier_min_weight_fraction_leaf": [0.0], "DecisionTreeClassifier_min_impurity_decrease": [0.4552573957735166], "DecisionTreeClassifier_ccp_alpha": [0.992]}, {"LinearSVC": [1], "End": [1], "LinearSVC_penalty": [0], "LinearSVC_loss": [0], "LinearSVC_dual": [true], "LinearSVC_C": [0.005], "LinearSVC_multi_class": [0], "LinearSVC_fit_intercept": [true]}, {"RidgeClassifier": [1], "End": [1], "RidgeClassifier_alpha": [1.8578538206006923], "RidgeClassifier_fit_intercept": [false], "RidgeClassifier_normalize": [false], "RidgeClassifier_tol": [-0.0047], "RidgeClassifier_solver": [0]}, {"CategoricalNB": [1], "End": [1], "CategoricalNB_fit_prior": [true]}, {"BernoulliNB": [1], "End": [1], "BernoulliNB_alpha": [0.0], "BernoulliNB_binarize": [0.992], "BernoulliNB_fit_prior": [false]}, {"LocallyLinearEmbedding": [1], "RidgeClassifier": [1], "End": [1], "LocallyLinearEmbedding_n_neighbors": [1], "LocallyLinearEmbedding_n_components": [1], "LocallyLinearEmbedding_reg": [0.001], "LocallyLinearEmbedding_eigen_solver": [0], "LocallyLinearEmbedding_method": [1], "LocallyLinearEmbedding_neighbors_algorithm": [2], "RidgeClassifier_alpha": [1.8578538206006923], "RidgeClassifier_fit_intercept": [false], "RidgeClassifier_normalize": [false], "RidgeClassifier_tol": [-0.0047], "RidgeClassifier_solver": [3]}, {"ExtraTreeClassifier": [1], "End": [1], "ExtraTreeClassifier_min_samples_split": [3], "ExtraTreeClassifier_min_weight_fraction_leaf": [0.0], "ExtraTreeClassifier_min_impurity_decrease": [0.0], "ExtraTreeClassifier_ccp_alpha": [0.992]}, {"DecisionTreeClassifier": [1], "End": [1], "DecisionTreeClassifier_min_samples_split": [2], "DecisionTreeClassifier_min_weight_fraction_leaf": [0.0], "DecisionTreeClassifier_min_impurity_decrease": [0.4552573957735166], "DecisionTreeClassifier_ccp_alpha": [0.992]}, {"OneClassSVM": [1], "End": [1], "OneClassSVM_kernel": [1], "OneClassSVM_degree": [1], "OneClassSVM_gamma": [1], "OneClassSVM_coef0": [-0.8445290065926044], "OneClassSVM_shrinking": [false], "OneClassSVM_cache_size": [90]}, {"KBinsDiscretizer": [1], "LogisticRegression": [1], "End": [1], "KBinsDiscretizer_n_bins": [6], "KBinsDiscretizer_encode": [1], "KBinsDiscretizer_strategy": [2], "LogisticRegression_penalty": [1], "LogisticRegression_dual": [true], "LogisticRegression_C": [9.991], "LogisticRegression_fit_intercept": [false], "LogisticRegression_solver": [0], "LogisticRegression_multi_class": [0]}, {"FastICA": [1], "ExtraTreeClassifier": [1], "End": [1], "FastICA_algorithm": [1], "FastICA_whiten": [false], "FastICA_fun": [1], "ExtraTreeClassifier_min_samples_split": [3], "ExtraTreeClassifier_min_weight_fraction_leaf": [0.0], "ExtraTreeClassifier_min_impurity_decrease": [0.0], "ExtraTreeClassifier_ccp_alpha": [0.992]}, {"SparsePCA": [1], "KNeighborsClassifier": [1], "End": [1], "SparsePCA_ridge_alpha": [0.03681846705741536], "SparsePCA_method": [1], "KNeighborsClassifier_n_neighbors": [7], "KNeighborsClassifier_weights": [1], "KNeighborsClassifier_algorithm": [3], "KNeighborsClassifier_leaf_size": [34], "KNeighborsClassifier_p": [1], "KNeighborsClassifier_metric": [0]}, {"SparsePCA": [1], "RidgeClassifier": [1], "End": [1], "SparsePCA_ridge_alpha": [0.03681846705741536], "SparsePCA_method": [0], "RidgeClassifier_alpha": [1.8578538206006923], "RidgeClassifier_fit_intercept": [false], "RidgeClassifier_normalize": [false], "RidgeClassifier_tol": [-0.0047], "RidgeClassifier_solver": [6]}, {"FastICA": [1], "BernoulliNB": [1], "End": [1], "FastICA_algorithm": [1], "FastICA_whiten": [false], "FastICA_fun": [1], "BernoulliNB_alpha": [0.0], "BernoulliNB_binarize": [-0.992], "BernoulliNB_fit_prior": [false]}, {"LocallyLinearEmbedding": [1], "KNeighborsClassifier": [1], "End": [1], "LocallyLinearEmbedding_n_neighbors": [1], "LocallyLinearEmbedding_n_components": [1], "LocallyLinearEmbedding_reg": [0.001], "LocallyLinearEmbedding_eigen_solver": [0], "LocallyLinearEmbedding_method": [1], "LocallyLinearEmbedding_neighbors_algorithm": [3], "KNeighborsClassifier_n_neighbors": [1], "KNeighborsClassifier_weights": [0], "KNeighborsClassifier_algorithm": [1], "KNeighborsClassifier_leaf_size": [59], "KNeighborsClassifier_p": [1], "KNeighborsClassifier_metric": [0]}, {"PowerTransformer": [1], "KerasClassifier": [1], "End": [1], "PowerTransformer_standardize": [true], "KerasClassifier_optimizer": [0], "production_8": [1]}, {"KNeighborsClassifier": [1], "End": [1], "KNeighborsClassifier_n_neighbors": [6], "KNeighborsClassifier_weights": [1], "KNeighborsClassifier_algorithm": [0], "KNeighborsClassifier_leaf_size": [56], "KNeighborsClassifier_p": [3], "KNeighborsClassifier_metric": [0]}, {"NearestCentroid": [1], "End": [1]}, {"FactorAnalysis": [1], "CategoricalNB": [1], "End": [1], "FactorAnalysis_tol": [-0.093], "FactorAnalysis_svd_method": [0], "FactorAnalysis_iterated_power": [1], "CategoricalNB_fit_prior": [true]}, {"TfidfTransformer": [1], "OneClassSVM": [1], "End": [1], "TfidfTransformer_norm": [0], "TfidfTransformer_use_idf": [false], "TfidfTransformer_smooth_idf": [true], "TfidfTransformer_sublinear_tf": [true], "OneClassSVM_kernel": [0], "OneClassSVM_degree": [5], "OneClassSVM_gamma": [1], "OneClassSVM_coef0": [-0.992], "OneClassSVM_shrinking": [true], "OneClassSVM_cache_size": [1]}, {"PCA": [1], "KNeighborsTransformer": [1], "LogisticRegression": [1], "End": [1], "PCA_whiten": [true], "PCA_svd_solver": [3], "PCA_tol": [0.992], "PCA_iterated_power": [1], "KNeighborsTransformer_mode": [0], "KNeighborsTransformer_n_neighbors": [1], "KNeighborsTransformer_algorithm": [2], "KNeighborsTransformer_leaf_size": [53], "KNeighborsTransformer_p": [3], "LogisticRegression_penalty": [1], "LogisticRegression_dual": [true], "LogisticRegression_C": [5.432746772337537], "LogisticRegression_fit_intercept": [false], "LogisticRegression_solver": [0], "LogisticRegression_multi_class": [0]}, {"KBinsDiscretizer": [1], "OneClassSVM": [1], "End": [1], "KBinsDiscretizer_n_bins": [6], "KBinsDiscretizer_encode": [0], "KBinsDiscretizer_strategy": [0], "OneClassSVM_kernel": [0], "OneClassSVM_degree": [3], "OneClassSVM_gamma": [0], "OneClassSVM_coef0": [-0.992], "OneClassSVM_shrinking": [false], "OneClassSVM_cache_size": [149]}, {"RobustScaler": [1], "KMeans": [1], "End": [1], "RobustScaler_with_centering": [false], "RobustScaler_with_scaling": [false], "KMeans_n_clusters": [8], "KMeans_init": [0], "KMeans_precompute_distances": [0]}, {"KerasClassifier": [1], "End": [1], "KerasClassifier_optimizer": [0], "production_8": [1]}, {"LogisticRegression": [1], "End": [1], "LogisticRegression_penalty": [1], "LogisticRegression_dual": [true], "LogisticRegression_C": [9.991], "LogisticRegression_fit_intercept": [true], "LogisticRegression_solver": [3], "LogisticRegression_multi_class": [1]}, {"NearestCentroid": [1], "End": [1]}, {"KerasClassifier": [1], "End": [1], "KerasClassifier_optimizer": [1], "production_7": [1, 1, 1, 1], "production_12": [1, 1, 1, 1], "production_9": [1, 1, 1, 1], "production_8": [1], "production_11": [1, 1, 1], "production_10": [1]}, {"OneClassSVM": [1], "End": [1], "OneClassSVM_kernel": [2], "OneClassSVM_degree": [2], "OneClassSVM_gamma": [1], "OneClassSVM_coef0": [0.992], "OneClassSVM_shrinking": [true], "OneClassSVM_cache_size": [1]}, {"LatentDirichletAllocation": [1], "GaussianNB": [1], "End": [1]}], "pipeline_distributions": [{"KMeans": "UnormalizedWeightParam(value=1)", "End": "UnormalizedWeightParam(value=1)", "KMeans_n_clusters": "MeanDevParam(mean=8.0, dev=14, initial_params=(8.0, 14))", "KMeans_init": "DistributionParam(weights=[1.0])", "KMeans_precompute_distances": "DistributionParam(weights=[1.0])"}, {"RadiusNeighborsTransformer": "UnormalizedWeightParam(value=1)", "MiniBatchKMeans": "UnormalizedWeightParam(value=1)", "KNNImputer": "UnormalizedWeightParam(value=1)", "End": "UnormalizedWeightParam(value=1)", "KNNImputer_n_neighbors": "MeanDevParam(mean=5.0, dev=8, initial_params=(5.0, 8))", "KNNImputer_weights": "DistributionParam(weights=[0.5, 0.5])", "KNNImputer_metric": "DistributionParam(weights=[1.0])", "KNNImputer_add_indicator": "WeightParam(value=0.5)", "RadiusNeighborsTransformer_mode": "DistributionParam(weights=[0.5, 0.5])", "RadiusNeighborsTransformer_radius": "MeanDevParam(\n    mean=-0.0019999999999997797,\n    dev=19.985999999999997,\n    initial_params=(-0.0019999999999997797, 19.985999999999997),\n)", "RadiusNeighborsTransformer_algorithm": "DistributionParam(weights=[0.25, 0.25, 0.25, 0.25])", "RadiusNeighborsTransformer_leaf_size": "MeanDevParam(mean=30.0, dev=58, initial_params=(30.0, 58))", "RadiusNeighborsTransformer_p": "MeanDevParam(mean=2.0, dev=2, initial_params=(2.0, 2))", "MiniBatchKMeans_n_clusters": "MeanDevParam(mean=8.0, dev=14, initial_params=(8.0, 14))", "MiniBatchKMeans_init": "DistributionParam(weights=[1.0])", "MiniBatchKMeans_compute_labels": "WeightParam(value=0.5)", "MiniBatchKMeans_tol": "MeanDevParam(mean=0.0, dev=1.984, initial_params=(0.0, 1.984))", "MiniBatchKMeans_max_no_improvement": "MeanDevParam(mean=10.0, dev=18, initial_params=(10.0, 18))", "MiniBatchKMeans_reassignment_ratio": "MeanDevParam(\n    mean=0.0005000000000000004, dev=0.187, initial_params=(0.0005000000000000004, 0.187)\n)"}, {"End": "UnormalizedWeightParam(value=16.2)", "MultinomialNB": "UnormalizedWeightParam(value=3.0)", "MultinomialNB_fit_prior": "WeightParam(value=0.0)", "KNeighborsTransformer": "UnormalizedWeightParam(value=1)", "KNeighborsTransformer_mode": "DistributionParam(weights=[0.5, 0.5])", "KNeighborsTransformer_n_neighbors": "MeanDevParam(mean=5.0, dev=8, initial_params=(5.0, 8))", "KNeighborsTransformer_algorithm": "DistributionParam(weights=[0.25, 0.25, 0.25, 0.25])", "KNeighborsTransformer_leaf_size": "MeanDevParam(mean=30.0, dev=58, initial_params=(30.0, 58))", "KNeighborsTransformer_p": "MeanDevParam(mean=2.0, dev=2, initial_params=(2.0, 2))"}, {"End": "UnormalizedWeightParam(value=16.2)", "ComplementNB": "UnormalizedWeightParam(value=3.0)", "ComplementNB_fit_prior": "WeightParam(value=0.5)", "ComplementNB_norm": "WeightParam(value=0.5)", "LatentDirichletAllocation": "UnormalizedWeightParam(value=2.0)"}, {"End": "UnormalizedWeightParam(value=16.2)", "MiniBatchSparsePCA": "UnormalizedWeightParam(value=2.0)", "MiniBatchSparsePCA_ridge_alpha": "MeanDevParam(\n    mean=-0.017902511309715416, dev=0.0, initial_params=[0.0005000000000000004, 0.187]\n)", "MiniBatchSparsePCA_n_iter": "MeanDevParam(mean=159.0, dev=0.0, initial_params=[100.0, 198.0])", "MiniBatchSparsePCA_batch_size": "MeanDevParam(mean=5.0, dev=0.0, initial_params=[3.0, 4.0])", "MiniBatchSparsePCA_shuffle": "WeightParam(value=0.0)", "MiniBatchSparsePCA_method": "DistributionParam(weights=[0.25, 0.75])", "Perceptron": "UnormalizedWeightParam(value=1)", "Perceptron_fit_intercept": "WeightParam(value=0.5)", "Perceptron_tol": "MeanDevParam(mean=-0.002, dev=0.006, initial_params=(-0.002, 0.006))", "Perceptron_shuffle": "WeightParam(value=0.5)", "Perceptron_eta0": "MeanDevParam(\n    mean=4.998, dev=9.985999999999999, initial_params=(4.998, 9.985999999999999)\n)", "Perceptron_early_stopping": "WeightParam(value=0.5)", "Perceptron_validation_fraction": "MeanDevParam(mean=0.4995, dev=0.987, initial_params=(0.4995, 0.987))", "Perceptron_n_iter_no_change": "MeanDevParam(mean=5.0, dev=8, initial_params=(5.0, 8))"}, {"End": "UnormalizedWeightParam(value=16.2)", "ExtraTreeClassifier": "UnormalizedWeightParam(value=2.0)", "ExtraTreeClassifier_min_samples_split": "MeanDevParam(mean=3.0, dev=0.0, initial_params=[2.5, 1.0])", "ExtraTreeClassifier_min_weight_fraction_leaf": "MeanDevParam(mean=0.0, dev=0.0, initial_params=[0.25, 0.5])", "ExtraTreeClassifier_min_impurity_decrease": "MeanDevParam(mean=0.0, dev=0.0, initial_params=[0.496, 0.992])", "ExtraTreeClassifier_ccp_alpha": "MeanDevParam(mean=0.992, dev=0.0, initial_params=[0.496, 0.992])"}, {"End": "UnormalizedWeightParam(value=16.2)", "MultinomialNB": "UnormalizedWeightParam(value=3.0)", "MultinomialNB_fit_prior": "WeightParam(value=0.0)"}, {"End": "UnormalizedWeightParam(value=16.2)", "PassiveAggressiveClassifier": "UnormalizedWeightParam(value=1)", "PassiveAggressiveClassifier_C": "MeanDevParam(\n    mean=-0.0019999999999997797,\n    dev=19.985999999999997,\n    initial_params=(-0.0019999999999997797, 19.985999999999997),\n)", "PassiveAggressiveClassifier_fit_intercept": "WeightParam(value=0.5)", "PassiveAggressiveClassifier_tol": "MeanDevParam(mean=-0.002, dev=0.006, initial_params=(-0.002, 0.006))", "PassiveAggressiveClassifier_early_stopping": "WeightParam(value=0.5)", "PassiveAggressiveClassifier_validation_fraction": "MeanDevParam(mean=0.4995, dev=0.987, initial_params=(0.4995, 0.987))", "PassiveAggressiveClassifier_n_iter_no_change": "MeanDevParam(mean=5.0, dev=8, initial_params=(5.0, 8))", "PassiveAggressiveClassifier_shuffle": "WeightParam(value=0.5)", "PassiveAggressiveClassifier_average": "WeightParam(value=0.5)"}, {"End": "UnormalizedWeightParam(value=16.2)", "BernoulliNB": "UnormalizedWeightParam(value=1)", "BernoulliNB_alpha": "MeanDevParam(mean=4.9955, dev=9.991, initial_params=(4.9955, 9.991))", "BernoulliNB_binarize": "MeanDevParam(mean=0.0, dev=1.984, initial_params=(0.0, 1.984))", "BernoulliNB_fit_prior": "WeightParam(value=0.5)"}, {"End": "UnormalizedWeightParam(value=16.2)", "ExtraTreeClassifier": "UnormalizedWeightParam(value=2.0)", "ExtraTreeClassifier_min_samples_split": "MeanDevParam(mean=3.0, dev=0.0, initial_params=[2.5, 1.0])", "ExtraTreeClassifier_min_weight_fraction_leaf": "MeanDevParam(mean=0.0, dev=0.0, initial_params=[0.25, 0.5])", "ExtraTreeClassifier_min_impurity_decrease": "MeanDevParam(mean=0.0, dev=0.0, initial_params=[0.496, 0.992])", "ExtraTreeClassifier_ccp_alpha": "MeanDevParam(mean=0.992, dev=0.0, initial_params=[0.496, 0.992])"}, {"End": "UnormalizedWeightParam(value=16.2)", "DecisionTreeClassifier": "UnormalizedWeightParam(value=2.0)", "DecisionTreeClassifier_min_samples_split": "MeanDevParam(mean=2.0, dev=0.0, initial_params=[2.5, 1.0])", "DecisionTreeClassifier_min_weight_fraction_leaf": "MeanDevParam(mean=0.0, dev=0.0, initial_params=[0.25, 0.5])", "DecisionTreeClassifier_min_impurity_decrease": "MeanDevParam(mean=0.4552573957735166, dev=0.0, initial_params=[0.496, 0.992])", "DecisionTreeClassifier_ccp_alpha": "MeanDevParam(mean=0.992, dev=0.0, initial_params=[0.496, 0.992])", "SparsePCA": "UnormalizedWeightParam(value=2.0)", "SparsePCA_ridge_alpha": "MeanDevParam(\n    mean=0.03681846705741536, dev=0.0, initial_params=[0.0005000000000000004, 0.187]\n)", "SparsePCA_method": "DistributionParam(weights=[0.75, 0.25])"}, {"End": "UnormalizedWeightParam(value=16.2)", "DecisionTreeClassifier": "UnormalizedWeightParam(value=2.0)", "DecisionTreeClassifier_min_samples_split": "MeanDevParam(mean=2.0, dev=0.0, initial_params=[2.5, 1.0])", "DecisionTreeClassifier_min_weight_fraction_leaf": "MeanDevParam(mean=0.0, dev=0.0, initial_params=[0.25, 0.5])", "DecisionTreeClassifier_min_impurity_decrease": "MeanDevParam(mean=0.4552573957735166, dev=0.0, initial_params=[0.496, 0.992])", "DecisionTreeClassifier_ccp_alpha": "MeanDevParam(mean=0.992, dev=0.0, initial_params=[0.496, 0.992])"}, {"End": "UnormalizedWeightParam(value=16.2)", "ComplementNB": "UnormalizedWeightParam(value=3.0)", "ComplementNB_fit_prior": "WeightParam(value=0.5)", "ComplementNB_norm": "WeightParam(value=0.5)"}, {"Birch": "UnormalizedWeightParam(value=2.0)", "End": "UnormalizedWeightParam(value=16.2)", "Birch_threshold": "MeanDevParam(\n    mean=-2.4771467529368474, dev=0.0, initial_params=[-0.002000000000000224, 9.986]\n)", "Birch_branching_factor": "MeanDevParam(mean=2.0, dev=0.0, initial_params=[50.5, 97.0])", "Birch_n_clusters": "MeanDevParam(mean=4.0, dev=0.0, initial_params=[3.0, 4.0])", "Birch_compute_labels": "WeightParam(value=1.0)"}, {"End": "UnormalizedWeightParam(value=16.2)", "LinearSVC": "UnormalizedWeightParam(value=2.15)", "LinearSVC_penalty": "DistributionParam(weights=[1.0])", "LinearSVC_loss": "DistributionParam(weights=[0.23913043478260868, 0.7608695652173914])", "LinearSVC_dual": "WeightParam(value=1.0)", "LinearSVC_C": "MeanDevParam(mean=0.005, dev=0.0, initial_params=[4.998, 9.985999999999999])", "LinearSVC_multi_class": "DistributionParam(weights=[0.7608695652173914, 0.23913043478260868])", "LinearSVC_fit_intercept": "WeightParam(value=1.0)", "MinMaxScaler": "UnormalizedWeightParam(value=1)"}, {"End": "UnormalizedWeightParam(value=16.2)", "SGDClassifier": "UnormalizedWeightParam(value=1)", "SGDClassifier_loss": "DistributionParam(\n    weights=[\n        0.1111111111111111,\n        0.1111111111111111,\n        0.1111111111111111,\n        0.1111111111111111,\n        0.1111111111111111,\n        0.1111111111111111,\n        0.1111111111111111,\n        0.1111111111111111,\n        0.1111111111111111,\n    ]\n)", "SGDClassifier_penalty": "DistributionParam(weights=[0.3333333333333333, 0.3333333333333333, 0.3333333333333333])", "SGDClassifier_l1_ratio": "MeanDevParam(mean=0.5, dev=0.998, initial_params=(0.5, 0.998))", "SGDClassifier_fit_intercept": "WeightParam(value=0.5)", "SGDClassifier_tol": "MeanDevParam(mean=-0.002, dev=0.006, initial_params=(-0.002, 0.006))", "SGDClassifier_shuffle": "WeightParam(value=0.5)", "SGDClassifier_epsilon": "MeanDevParam(\n    mean=0.0005000000000000004,\n    dev=1.9849999999999999,\n    initial_params=(0.0005000000000000004, 1.9849999999999999),\n)", "SGDClassifier_learning_rate": "DistributionParam(weights=[1.0])", "SGDClassifier_eta0": "MeanDevParam(mean=0.0, dev=1.984, initial_params=(0.0, 1.984))", "SGDClassifier_power_t": "MeanDevParam(\n    mean=-0.002000000000000224, dev=9.986, initial_params=(-0.002000000000000224, 9.986)\n)", "SGDClassifier_early_stopping": "WeightParam(value=0.5)", "SGDClassifier_validation_fraction": "MeanDevParam(mean=0.4995, dev=0.987, initial_params=(0.4995, 0.987))", "SGDClassifier_n_iter_no_change": "MeanDevParam(mean=5.0, dev=8, initial_params=(5.0, 8))", "SGDClassifier_average": "WeightParam(value=0.5)"}, {"End": "UnormalizedWeightParam(value=16.2)", "MiniBatchKMeans": "UnormalizedWeightParam(value=1)", "MinMaxScaler": "UnormalizedWeightParam(value=1)", "MiniBatchKMeans_n_clusters": "MeanDevParam(mean=8.0, dev=14, initial_params=(8.0, 14))", "MiniBatchKMeans_init": "DistributionParam(weights=[1.0])", "MiniBatchKMeans_compute_labels": "WeightParam(value=0.5)", "MiniBatchKMeans_tol": "MeanDevParam(mean=0.0, dev=1.984, initial_params=(0.0, 1.984))", "MiniBatchKMeans_max_no_improvement": "MeanDevParam(mean=10.0, dev=18, initial_params=(10.0, 18))", "MiniBatchKMeans_reassignment_ratio": "MeanDevParam(\n    mean=0.0005000000000000004, dev=0.187, initial_params=(0.0005000000000000004, 0.187)\n)"}, {"End": "UnormalizedWeightParam(value=16.2)", "SVC": "UnormalizedWeightParam(value=1)", "RadiusNeighborsTransformer": "UnormalizedWeightParam(value=1)", "RadiusNeighborsTransformer_mode": "DistributionParam(weights=[0.5, 0.5])", "RadiusNeighborsTransformer_radius": "MeanDevParam(\n    mean=-0.0019999999999997797,\n    dev=19.985999999999997,\n    initial_params=(-0.0019999999999997797, 19.985999999999997),\n)", "RadiusNeighborsTransformer_algorithm": "DistributionParam(weights=[0.25, 0.25, 0.25, 0.25])", "RadiusNeighborsTransformer_leaf_size": "MeanDevParam(mean=30.0, dev=58, initial_params=(30.0, 58))", "RadiusNeighborsTransformer_p": "MeanDevParam(mean=2.0, dev=2, initial_params=(2.0, 2))", "SVC_C": "MeanDevParam(\n    mean=4.998, dev=9.985999999999999, initial_params=(4.998, 9.985999999999999)\n)", "SVC_degree": "MeanDevParam(mean=3.0, dev=4, initial_params=(3.0, 4))", "SVC_gamma": "DistributionParam(weights=[0.5, 0.5])", "SVC_coef0": "MeanDevParam(mean=0.0, dev=1.984, initial_params=(0.0, 1.984))", "SVC_shrinking": "WeightParam(value=0.5)", "SVC_probability": "WeightParam(value=0.5)", "SVC_cache_size": "MeanDevParam(mean=200.0, dev=398, initial_params=(200.0, 398))", "SVC_decision_function_shape": "DistributionParam(weights=[0.5, 0.5])", "SVC_break_ties": "WeightParam(value=0.5)"}, {"End": "UnormalizedWeightParam(value=16.2)", "CategoricalNB": "UnormalizedWeightParam(value=3.0)", "CategoricalNB_fit_prior": "WeightParam(value=1.0)"}, {"End": "UnormalizedWeightParam(value=16.2)", "CategoricalNB": "UnormalizedWeightParam(value=3.0)", "CategoricalNB_fit_prior": "WeightParam(value=1.0)"}, {"DecisionTreeClassifier": "UnormalizedWeightParam(value=1)", "TfidfTransformer": "UnormalizedWeightParam(value=1)", "End": "UnormalizedWeightParam(value=1)", "TfidfTransformer_norm": "DistributionParam(weights=[0.5, 0.5])", "TfidfTransformer_use_idf": "WeightParam(value=0.5)", "TfidfTransformer_smooth_idf": "WeightParam(value=0.5)", "TfidfTransformer_sublinear_tf": "WeightParam(value=0.5)", "DecisionTreeClassifier_min_samples_split": "MeanDevParam(mean=2.5, dev=1, initial_params=(2.5, 1))", "DecisionTreeClassifier_min_weight_fraction_leaf": "MeanDevParam(mean=0.25, dev=0.5, initial_params=(0.25, 0.5))", "DecisionTreeClassifier_min_impurity_decrease": "MeanDevParam(mean=0.496, dev=0.992, initial_params=(0.496, 0.992))", "DecisionTreeClassifier_ccp_alpha": "MeanDevParam(mean=0.496, dev=0.992, initial_params=(0.496, 0.992))"}, {"NuSVC": "UnormalizedWeightParam(value=1)", "KernelPCA": "UnormalizedWeightParam(value=1)", "End": "UnormalizedWeightParam(value=1)", "KernelPCA_degree": "MeanDevParam(mean=3.0, dev=4, initial_params=(3.0, 4))", "KernelPCA_alpha": "MeanDevParam(\n    mean=-0.0019999999999997797,\n    dev=19.985999999999997,\n    initial_params=(-0.0019999999999997797, 19.985999999999997),\n)", "KernelPCA_fit_inverse_transform": "WeightParam(value=0.5)", "KernelPCA_eigen_solver": "DistributionParam(weights=[0.3333333333333333, 0.3333333333333333, 0.3333333333333333])", "KernelPCA_tol": "MeanDevParam(mean=0.0, dev=198, initial_params=(0.0, 198))", "KernelPCA_remove_zero_eig": "WeightParam(value=0.5)", "NuSVC_kernel": "DistributionParam(weights=[0.25, 0.25, 0.25, 0.25])", "NuSVC_degree": "MeanDevParam(mean=3.0, dev=4, initial_params=(3.0, 4))", "NuSVC_gamma": "DistributionParam(weights=[0.5, 0.5])", "NuSVC_coef0": "MeanDevParam(mean=0.0, dev=1.984, initial_params=(0.0, 1.984))", "NuSVC_shrinking": "WeightParam(value=0.5)", "NuSVC_probability": "WeightParam(value=0.5)", "NuSVC_cache_size": "MeanDevParam(mean=200.0, dev=398, initial_params=(200.0, 398))", "NuSVC_decision_function_shape": "DistributionParam(weights=[0.5, 0.5])", "NuSVC_break_ties": "WeightParam(value=0.5)"}, {"LocallyLinearEmbedding": "UnormalizedWeightParam(value=5.0)", "End": "UnormalizedWeightParam(value=16.4)", "LocallyLinearEmbedding_n_neighbors": "MeanDevParam(mean=1.0, dev=0.0, initial_params=[5.0, 8.0])", "LocallyLinearEmbedding_n_components": "MeanDevParam(mean=1.75, dev=0.9574271077563381, initial_params=[2.0, 2.0])", "LocallyLinearEmbedding_reg": "MeanDevParam(\n    mean=-0.0019693318014123566, dev=0.00265136765127084, initial_params=[-0.002, 0.006]\n)", "LocallyLinearEmbedding_eigen_solver": "DistributionParam(weights=[0.2666666666666667, 0.4666666666666667, 0.2666666666666667])", "LocallyLinearEmbedding_method": "DistributionParam(weights=[0.2666666666666667, 0.4666666666666667, 0.2666666666666667])", "LocallyLinearEmbedding_neighbors_algorithm": "DistributionParam(weights=[0.25, 0.25, 0.25, 0.25])", "MultinomialNB": "UnormalizedWeightParam(value=3.0)", "MultinomialNB_fit_prior": "WeightParam(value=0.0)"}, {"End": "UnormalizedWeightParam(value=16.4)", "MiniBatchSparsePCA": "UnormalizedWeightParam(value=2.0)", "MiniBatchSparsePCA_ridge_alpha": "MeanDevParam(\n    mean=-0.017902511309715416, dev=0.0, initial_params=[0.0005000000000000004, 0.187]\n)", "MiniBatchSparsePCA_n_iter": "MeanDevParam(mean=159.0, dev=0.0, initial_params=[100.0, 198.0])", "MiniBatchSparsePCA_batch_size": "MeanDevParam(mean=5.0, dev=0.0, initial_params=[3.0, 4.0])", "MiniBatchSparsePCA_shuffle": "WeightParam(value=0.0)", "MiniBatchSparsePCA_method": "DistributionParam(weights=[0.25, 0.75])", "NearestCentroid": "UnormalizedWeightParam(value=2.0)", "KNeighborsTransformer": "UnormalizedWeightParam(value=1)", "KNeighborsTransformer_mode": "DistributionParam(weights=[0.5, 0.5])", "KNeighborsTransformer_n_neighbors": "MeanDevParam(mean=5.0, dev=8, initial_params=(5.0, 8))", "KNeighborsTransformer_algorithm": "DistributionParam(weights=[0.25, 0.25, 0.25, 0.25])", "KNeighborsTransformer_leaf_size": "MeanDevParam(mean=30.0, dev=58, initial_params=(30.0, 58))", "KNeighborsTransformer_p": "MeanDevParam(mean=2.0, dev=2, initial_params=(2.0, 2))"}, {"End": "UnormalizedWeightParam(value=16.4)", "MultinomialNB": "UnormalizedWeightParam(value=3.0)", "MultinomialNB_fit_prior": "WeightParam(value=0.0)", "TfidfTransformer": "UnormalizedWeightParam(value=2.0)", "TfidfTransformer_norm": "DistributionParam(weights=[0.25, 0.75])", "TfidfTransformer_use_idf": "WeightParam(value=0.0)", "TfidfTransformer_smooth_idf": "WeightParam(value=1.0)", "TfidfTransformer_sublinear_tf": "WeightParam(value=1.0)"}, {"End": "UnormalizedWeightParam(value=16.4)", "OneClassSVM": "UnormalizedWeightParam(value=1)", "NMF": "UnormalizedWeightParam(value=1)", "NMF_alpha": "MeanDevParam(mean=0.0, dev=0.0, initial_params=(0.0, 0.0))", "NMF_l1_ratio": "MeanDevParam(mean=0.0, dev=0.0, initial_params=(0.0, 0.0))", "NMF_shuffle": "WeightParam(value=0.5)", "OneClassSVM_kernel": "DistributionParam(weights=[0.25, 0.25, 0.25, 0.25])", "OneClassSVM_degree": "MeanDevParam(mean=3.0, dev=4, initial_params=(3.0, 4))", "OneClassSVM_gamma": "DistributionParam(weights=[0.5, 0.5])", "OneClassSVM_coef0": "MeanDevParam(mean=0.0, dev=1.984, initial_params=(0.0, 1.984))", "OneClassSVM_shrinking": "WeightParam(value=0.5)", "OneClassSVM_cache_size": "MeanDevParam(mean=200.0, dev=398, initial_params=(200.0, 398))"}, {"End": "UnormalizedWeightParam(value=16.4)", "DecisionTreeClassifier": "UnormalizedWeightParam(value=2.0)", "DecisionTreeClassifier_min_samples_split": "MeanDevParam(mean=2.0, dev=0.0, initial_params=[2.5, 1.0])", "DecisionTreeClassifier_min_weight_fraction_leaf": "MeanDevParam(mean=0.0, dev=0.0, initial_params=[0.25, 0.5])", "DecisionTreeClassifier_min_impurity_decrease": "MeanDevParam(mean=0.4552573957735166, dev=0.0, initial_params=[0.496, 0.992])", "DecisionTreeClassifier_ccp_alpha": "MeanDevParam(mean=0.992, dev=0.0, initial_params=[0.496, 0.992])", "RobustScaler": "UnormalizedWeightParam(value=2.0)", "RobustScaler_with_centering": "WeightParam(value=0.0)", "RobustScaler_with_scaling": "WeightParam(value=0.0)"}, {"End": "UnormalizedWeightParam(value=16.4)", "MiniBatchSparsePCA": "UnormalizedWeightParam(value=2.0)", "MiniBatchSparsePCA_ridge_alpha": "MeanDevParam(\n    mean=-0.017902511309715416, dev=0.0, initial_params=[0.0005000000000000004, 0.187]\n)", "MiniBatchSparsePCA_n_iter": "MeanDevParam(mean=159.0, dev=0.0, initial_params=[100.0, 198.0])", "MiniBatchSparsePCA_batch_size": "MeanDevParam(mean=5.0, dev=0.0, initial_params=[3.0, 4.0])", "MiniBatchSparsePCA_shuffle": "WeightParam(value=0.0)", "MiniBatchSparsePCA_method": "DistributionParam(weights=[0.25, 0.75])", "LinearSVC": "UnormalizedWeightParam(value=2.1999999999999997)", "LinearSVC_penalty": "DistributionParam(weights=[1.0])", "LinearSVC_loss": "DistributionParam(weights=[0.22774327122153207, 0.772256728778468])", "LinearSVC_dual": "WeightParam(value=1.0)", "LinearSVC_C": "MeanDevParam(mean=0.005, dev=0.0, initial_params=[4.998, 9.985999999999999])", "LinearSVC_multi_class": "DistributionParam(weights=[0.7246376811594203, 0.2753623188405797])", "LinearSVC_fit_intercept": "WeightParam(value=1.0)"}, {"End": "UnormalizedWeightParam(value=16.4)", "KBinsDiscretizer": "UnormalizedWeightParam(value=2.0)", "KBinsDiscretizer_n_bins": "MeanDevParam(mean=6.0, dev=0.0, initial_params=[5.5, 7.0])", "KBinsDiscretizer_encode": "DistributionParam(weights=[0.75, 0.25])", "KBinsDiscretizer_strategy": "DistributionParam(\n    weights=[0.16666666666666669, 0.6666666666666667, 0.16666666666666669]\n)", "OneClassSVM": "UnormalizedWeightParam(value=1)", "OneClassSVM_kernel": "DistributionParam(weights=[0.25, 0.25, 0.25, 0.25])", "OneClassSVM_degree": "MeanDevParam(mean=3.0, dev=4, initial_params=(3.0, 4))", "OneClassSVM_gamma": "DistributionParam(weights=[0.5, 0.5])", "OneClassSVM_coef0": "MeanDevParam(mean=0.0, dev=1.984, initial_params=(0.0, 1.984))", "OneClassSVM_shrinking": "WeightParam(value=0.5)", "OneClassSVM_cache_size": "MeanDevParam(mean=200.0, dev=398, initial_params=(200.0, 398))"}, {"End": "UnormalizedWeightParam(value=16.4)", "AffinityPropagation": "UnormalizedWeightParam(value=1)", "AffinityPropagation_convergence_iter": "MeanDevParam(mean=15.0, dev=28, initial_params=(15.0, 28))", "AffinityPropagation_affinity": "DistributionParam(weights=[1.0])"}, {"End": "UnormalizedWeightParam(value=16.4)", "LogisticRegression": "UnormalizedWeightParam(value=3.0)", "LogisticRegression_penalty": "DistributionParam(weights=[0.16666666666666666, 0.8333333333333334])", "LogisticRegression_dual": "WeightParam(value=1.0)", "LogisticRegression_C": "MeanDevParam(\n    mean=4.998, dev=7.061168316928863, initial_params=[4.998, 9.985999999999999]\n)", "LogisticRegression_fit_intercept": "WeightParam(value=0.5)", "LogisticRegression_solver": "DistributionParam(\n    weights=[\n        0.4166666666666667,\n        0.08333333333333333,\n        0.4166666666666667,\n        0.08333333333333333,\n    ]\n)", "LogisticRegression_multi_class": "DistributionParam(weights=[0.4444444444444444, 0.4444444444444444, 0.1111111111111111])"}, {"End": "UnormalizedWeightParam(value=16.4)", "FastICA": "UnormalizedWeightParam(value=2.0)", "FastICA_algorithm": "DistributionParam(weights=[0.25, 0.75])", "FastICA_whiten": "WeightParam(value=0.0)", "FastICA_fun": "DistributionParam(\n    weights=[0.16666666666666669, 0.6666666666666667, 0.16666666666666669]\n)", "LogisticRegression": "UnormalizedWeightParam(value=3.0)", "LogisticRegression_penalty": "DistributionParam(weights=[0.16666666666666666, 0.8333333333333334])", "LogisticRegression_dual": "WeightParam(value=1.0)", "LogisticRegression_C": "MeanDevParam(\n    mean=4.998, dev=7.061168316928863, initial_params=[4.998, 9.985999999999999]\n)", "LogisticRegression_fit_intercept": "WeightParam(value=0.5)", "LogisticRegression_solver": "DistributionParam(\n    weights=[\n        0.4166666666666667,\n        0.08333333333333333,\n        0.4166666666666667,\n        0.08333333333333333,\n    ]\n)", "LogisticRegression_multi_class": "DistributionParam(weights=[0.4444444444444444, 0.4444444444444444, 0.1111111111111111])"}, {"End": "UnormalizedWeightParam(value=16.4)", "NearestCentroid": "UnormalizedWeightParam(value=2.0)", "NMF": "UnormalizedWeightParam(value=1)", "NMF_alpha": "MeanDevParam(mean=0.0, dev=0.0, initial_params=(0.0, 0.0))", "NMF_l1_ratio": "MeanDevParam(mean=0.0, dev=0.0, initial_params=(0.0, 0.0))", "NMF_shuffle": "WeightParam(value=0.5)"}, {"End": "UnormalizedWeightParam(value=16.4)", "DecisionTreeClassifier": "UnormalizedWeightParam(value=2.0)", "DecisionTreeClassifier_min_samples_split": "MeanDevParam(mean=2.0, dev=0.0, initial_params=[2.5, 1.0])", "DecisionTreeClassifier_min_weight_fraction_leaf": "MeanDevParam(mean=0.0, dev=0.0, initial_params=[0.25, 0.5])", "DecisionTreeClassifier_min_impurity_decrease": "MeanDevParam(mean=0.4552573957735166, dev=0.0, initial_params=[0.496, 0.992])", "DecisionTreeClassifier_ccp_alpha": "MeanDevParam(mean=0.992, dev=0.0, initial_params=[0.496, 0.992])"}, {"End": "UnormalizedWeightParam(value=16.4)", "KNNImputer": "UnormalizedWeightParam(value=2.0)", "KNNImputer_n_neighbors": "MeanDevParam(mean=9.0, dev=0.0, initial_params=[5.0, 8.0])", "KNNImputer_weights": "DistributionParam(weights=[0.75, 0.25])", "KNNImputer_metric": "DistributionParam(weights=[1.0])", "KNNImputer_add_indicator": "WeightParam(value=1.0)", "KMeans": "UnormalizedWeightParam(value=1)", "KMeans_n_clusters": "MeanDevParam(mean=8.0, dev=14, initial_params=(8.0, 14))", "KMeans_init": "DistributionParam(weights=[1.0])", "KMeans_precompute_distances": "DistributionParam(weights=[1.0])"}, {"End": "UnormalizedWeightParam(value=16.4)", "TfidfTransformer": "UnormalizedWeightParam(value=2.0)", "TfidfTransformer_norm": "DistributionParam(weights=[0.25, 0.75])", "TfidfTransformer_use_idf": "WeightParam(value=0.0)", "TfidfTransformer_smooth_idf": "WeightParam(value=1.0)", "TfidfTransformer_sublinear_tf": "WeightParam(value=1.0)", "Perceptron": "UnormalizedWeightParam(value=1)", "PowerTransformer": "UnormalizedWeightParam(value=1)", "Perceptron_fit_intercept": "WeightParam(value=0.5)", "Perceptron_tol": "MeanDevParam(mean=-0.002, dev=0.006, initial_params=(-0.002, 0.006))", "Perceptron_shuffle": "WeightParam(value=0.5)", "Perceptron_eta0": "MeanDevParam(\n    mean=4.998, dev=9.985999999999999, initial_params=(4.998, 9.985999999999999)\n)", "Perceptron_early_stopping": "WeightParam(value=0.5)", "Perceptron_validation_fraction": "MeanDevParam(mean=0.4995, dev=0.987, initial_params=(0.4995, 0.987))", "Perceptron_n_iter_no_change": "MeanDevParam(mean=5.0, dev=8, initial_params=(5.0, 8))", "PowerTransformer_standardize": "WeightParam(value=0.5)"}, {"End": "UnormalizedWeightParam(value=16.4)", "CategoricalNB": "UnormalizedWeightParam(value=3.1)", "CategoricalNB_fit_prior": "WeightParam(value=1.0)"}, {"End": "UnormalizedWeightParam(value=16.4)", "MultinomialNB": "UnormalizedWeightParam(value=3.0)", "MultinomialNB_fit_prior": "WeightParam(value=0.0)"}, {"End": "UnormalizedWeightParam(value=16.4)", "CategoricalNB": "UnormalizedWeightParam(value=3.1)", "CategoricalNB_fit_prior": "WeightParam(value=1.0)"}, {"End": "UnormalizedWeightParam(value=16.4)", "LogisticRegression": "UnormalizedWeightParam(value=3.0)", "LogisticRegression_penalty": "DistributionParam(weights=[0.16666666666666666, 0.8333333333333334])", "LogisticRegression_dual": "WeightParam(value=1.0)", "LogisticRegression_C": "MeanDevParam(\n    mean=4.998, dev=7.061168316928863, initial_params=[4.998, 9.985999999999999]\n)", "LogisticRegression_fit_intercept": "WeightParam(value=0.5)", "LogisticRegression_solver": "DistributionParam(\n    weights=[\n        0.4166666666666667,\n        0.08333333333333333,\n        0.4166666666666667,\n        0.08333333333333333,\n    ]\n)", "LogisticRegression_multi_class": "DistributionParam(weights=[0.4444444444444444, 0.4444444444444444, 0.1111111111111111])"}, {"AffinityPropagation": "UnormalizedWeightParam(value=1)", "End": "UnormalizedWeightParam(value=1)", "AffinityPropagation_convergence_iter": "MeanDevParam(mean=15.0, dev=28, initial_params=(15.0, 28))", "AffinityPropagation_affinity": "DistributionParam(weights=[1.0])"}, {"RidgeClassifier": "UnormalizedWeightParam(value=1)", "FastICA": "UnormalizedWeightParam(value=1)", "End": "UnormalizedWeightParam(value=1)", "FastICA_algorithm": "DistributionParam(weights=[0.5, 0.5])", "FastICA_whiten": "WeightParam(value=0.5)", "FastICA_fun": "DistributionParam(weights=[0.3333333333333333, 0.3333333333333333, 0.3333333333333333])", "RidgeClassifier_alpha": "MeanDevParam(\n    mean=-0.0019999999999997797,\n    dev=19.985999999999997,\n    initial_params=(-0.0019999999999997797, 19.985999999999997),\n)", "RidgeClassifier_fit_intercept": "WeightParam(value=0.5)", "RidgeClassifier_normalize": "WeightParam(value=0.5)", "RidgeClassifier_tol": "MeanDevParam(mean=-0.002, dev=0.006, initial_params=(-0.002, 0.006))", "RidgeClassifier_solver": "DistributionParam(\n    weights=[\n        0.14285714285714285,\n        0.14285714285714285,\n        0.14285714285714285,\n        0.14285714285714285,\n        0.14285714285714285,\n        0.14285714285714285,\n        0.14285714285714285,\n    ]\n)"}, {"End": "UnormalizedWeightParam(value=16.599999999999998)", "GaussianNB": "UnormalizedWeightParam(value=1)"}, {"End": "UnormalizedWeightParam(value=16.599999999999998)", "MiniBatchSparsePCA": "UnormalizedWeightParam(value=2.05)", "MiniBatchSparsePCA_ridge_alpha": "MeanDevParam(\n    mean=-0.017902511309715412, dev=0.0, initial_params=[0.0005000000000000004, 0.187]\n)", "MiniBatchSparsePCA_n_iter": "MeanDevParam(mean=158.99999999999997, dev=0.0, initial_params=[100.0, 198.0])", "MiniBatchSparsePCA_batch_size": "MeanDevParam(mean=5.0, dev=0.0, initial_params=[3.0, 4.0])", "MiniBatchSparsePCA_shuffle": "WeightParam(value=0.0)", "MiniBatchSparsePCA_method": "DistributionParam(weights=[0.23809523809523808, 0.7619047619047619])", "SVC": "UnormalizedWeightParam(value=1)", "SVC_C": "MeanDevParam(\n    mean=4.998, dev=9.985999999999999, initial_params=(4.998, 9.985999999999999)\n)", "SVC_degree": "MeanDevParam(mean=3.0, dev=4, initial_params=(3.0, 4))", "SVC_gamma": "DistributionParam(weights=[0.5, 0.5])", "SVC_coef0": "MeanDevParam(mean=0.0, dev=1.984, initial_params=(0.0, 1.984))", "SVC_shrinking": "WeightParam(value=0.5)", "SVC_probability": "WeightParam(value=0.5)", "SVC_cache_size": "MeanDevParam(mean=200.0, dev=398, initial_params=(200.0, 398))", "SVC_decision_function_shape": "DistributionParam(weights=[0.5, 0.5])", "SVC_break_ties": "WeightParam(value=0.5)"}, {"End": "UnormalizedWeightParam(value=16.599999999999998)", "ComplementNB": "UnormalizedWeightParam(value=3.0)", "ComplementNB_fit_prior": "WeightParam(value=0.5)", "ComplementNB_norm": "WeightParam(value=0.5)", "MiniBatchSparsePCA": "UnormalizedWeightParam(value=2.05)", "MiniBatchSparsePCA_ridge_alpha": "MeanDevParam(\n    mean=-0.017902511309715412, dev=0.0, initial_params=[0.0005000000000000004, 0.187]\n)", "MiniBatchSparsePCA_n_iter": "MeanDevParam(mean=158.99999999999997, dev=0.0, initial_params=[100.0, 198.0])", "MiniBatchSparsePCA_batch_size": "MeanDevParam(mean=5.0, dev=0.0, initial_params=[3.0, 4.0])", "MiniBatchSparsePCA_shuffle": "WeightParam(value=0.0)", "MiniBatchSparsePCA_method": "DistributionParam(weights=[0.23809523809523808, 0.7619047619047619])", "TfidfTransformer": "UnormalizedWeightParam(value=2.0)", "TfidfTransformer_norm": "DistributionParam(weights=[0.25, 0.75])", "TfidfTransformer_use_idf": "WeightParam(value=0.0)", "TfidfTransformer_smooth_idf": "WeightParam(value=1.0)", "TfidfTransformer_sublinear_tf": "WeightParam(value=1.0)"}, {"End": "UnormalizedWeightParam(value=16.599999999999998)", "CategoricalNB": "UnormalizedWeightParam(value=3.2)", "CategoricalNB_fit_prior": "WeightParam(value=1.0)"}, {"End": "UnormalizedWeightParam(value=16.599999999999998)", "ComplementNB": "UnormalizedWeightParam(value=3.0)", "ComplementNB_fit_prior": "WeightParam(value=0.5)", "ComplementNB_norm": "WeightParam(value=0.5)", "FastICA": "UnormalizedWeightParam(value=2.0)", "FastICA_algorithm": "DistributionParam(weights=[0.25, 0.75])", "FastICA_whiten": "WeightParam(value=0.0)", "FastICA_fun": "DistributionParam(\n    weights=[0.16666666666666669, 0.6666666666666667, 0.16666666666666669]\n)"}, {"End": "UnormalizedWeightParam(value=16.599999999999998)", "CategoricalNB": "UnormalizedWeightParam(value=3.2)", "CategoricalNB_fit_prior": "WeightParam(value=1.0)"}, {"End": "UnormalizedWeightParam(value=16.599999999999998)", "CategoricalNB": "UnormalizedWeightParam(value=3.2)", "CategoricalNB_fit_prior": "WeightParam(value=1.0)", "NMF": "UnormalizedWeightParam(value=1.05)", "NMF_alpha": "MeanDevParam(mean=0.0, dev=0.0, initial_params=(0.0, 0.0))", "NMF_l1_ratio": "MeanDevParam(mean=0.0, dev=0.0, initial_params=(0.0, 0.0))", "NMF_shuffle": "WeightParam(value=0.525)"}, {"End": "UnormalizedWeightParam(value=16.599999999999998)", "CategoricalNB": "UnormalizedWeightParam(value=3.2)", "CategoricalNB_fit_prior": "WeightParam(value=1.0)", "Isomap": "UnormalizedWeightParam(value=1)", "Isomap_n_neighbors": "MeanDevParam(mean=5.0, dev=8, initial_params=(5.0, 8))", "Isomap_n_components": "MeanDevParam(mean=2.0, dev=2, initial_params=(2.0, 2))", "Isomap_eigen_solver": "DistributionParam(weights=[0.3333333333333333, 0.3333333333333333, 0.3333333333333333])", "Isomap_tol": "MeanDevParam(mean=0.0, dev=198, initial_params=(0.0, 198))", "Isomap_path_method": "DistributionParam(weights=[1.0])", "Isomap_neighbors_algorithm": "DistributionParam(weights=[0.25, 0.25, 0.25, 0.25])", "Isomap_p": "MeanDevParam(mean=2.0, dev=2, initial_params=(2.0, 2))"}, {"LocallyLinearEmbedding": "UnormalizedWeightParam(value=5.0)", "End": "UnormalizedWeightParam(value=16.599999999999998)", "LocallyLinearEmbedding_n_neighbors": "MeanDevParam(mean=1.0, dev=0.0, initial_params=[5.0, 8.0])", "LocallyLinearEmbedding_n_components": "MeanDevParam(mean=1.75, dev=0.9574271077563381, initial_params=[2.0, 2.0])", "LocallyLinearEmbedding_reg": "MeanDevParam(\n    mean=-0.0019693318014123566, dev=0.00265136765127084, initial_params=[-0.002, 0.006]\n)", "LocallyLinearEmbedding_eigen_solver": "DistributionParam(weights=[0.2666666666666667, 0.4666666666666667, 0.2666666666666667])", "LocallyLinearEmbedding_method": "DistributionParam(weights=[0.2666666666666667, 0.4666666666666667, 0.2666666666666667])", "LocallyLinearEmbedding_neighbors_algorithm": "DistributionParam(weights=[0.25, 0.25, 0.25, 0.25])", "DecisionTreeClassifier": "UnormalizedWeightParam(value=2.0)", "DecisionTreeClassifier_min_samples_split": "MeanDevParam(mean=2.0, dev=0.0, initial_params=[2.5, 1.0])", "DecisionTreeClassifier_min_weight_fraction_leaf": "MeanDevParam(mean=0.0, dev=0.0, initial_params=[0.25, 0.5])", "DecisionTreeClassifier_min_impurity_decrease": "MeanDevParam(mean=0.4552573957735166, dev=0.0, initial_params=[0.496, 0.992])", "DecisionTreeClassifier_ccp_alpha": "MeanDevParam(mean=0.992, dev=0.0, initial_params=[0.496, 0.992])"}, {"End": "UnormalizedWeightParam(value=16.599999999999998)", "LinearSVC": "UnormalizedWeightParam(value=2.2499999999999996)", "LinearSVC_penalty": "DistributionParam(weights=[1.0])", "LinearSVC_loss": "DistributionParam(weights=[0.26451740116336386, 0.7354825988366361])", "LinearSVC_dual": "WeightParam(value=1.0)", "LinearSVC_C": "MeanDevParam(mean=0.005, dev=0.0, initial_params=[4.998, 9.985999999999999])", "LinearSVC_multi_class": "DistributionParam(weights=[0.7377501725327812, 0.26224982746721875])", "LinearSVC_fit_intercept": "WeightParam(value=1.0)", "RobustScaler": "UnormalizedWeightParam(value=2.0)", "RobustScaler_with_centering": "WeightParam(value=0.0)", "RobustScaler_with_scaling": "WeightParam(value=0.0)"}, {"End": "UnormalizedWeightParam(value=16.599999999999998)", "LogisticRegression": "UnormalizedWeightParam(value=3.0)", "LogisticRegression_penalty": "DistributionParam(weights=[0.16666666666666666, 0.8333333333333334])", "LogisticRegression_dual": "WeightParam(value=1.0)", "LogisticRegression_C": "MeanDevParam(\n    mean=4.998, dev=7.061168316928863, initial_params=[4.998, 9.985999999999999]\n)", "LogisticRegression_fit_intercept": "WeightParam(value=0.5)", "LogisticRegression_solver": "DistributionParam(\n    weights=[\n        0.4166666666666667,\n        0.08333333333333333,\n        0.4166666666666667,\n        0.08333333333333333,\n    ]\n)", "LogisticRegression_multi_class": "DistributionParam(weights=[0.4444444444444444, 0.4444444444444444, 0.1111111111111111])"}, {"End": "UnormalizedWeightParam(value=16.599999999999998)", "DecisionTreeClassifier": "UnormalizedWeightParam(value=2.0)", "DecisionTreeClassifier_min_samples_split": "MeanDevParam(mean=2.0, dev=0.0, initial_params=[2.5, 1.0])", "DecisionTreeClassifier_min_weight_fraction_leaf": "MeanDevParam(mean=0.0, dev=0.0, initial_params=[0.25, 0.5])", "DecisionTreeClassifier_min_impurity_decrease": "MeanDevParam(mean=0.4552573957735166, dev=0.0, initial_params=[0.496, 0.992])", "DecisionTreeClassifier_ccp_alpha": "MeanDevParam(mean=0.992, dev=0.0, initial_params=[0.496, 0.992])", "NMF": "UnormalizedWeightParam(value=1.05)", "NMF_alpha": "MeanDevParam(mean=0.0, dev=0.0, initial_params=(0.0, 0.0))", "NMF_l1_ratio": "MeanDevParam(mean=0.0, dev=0.0, initial_params=(0.0, 0.0))", "NMF_shuffle": "WeightParam(value=0.525)"}, {"End": "UnormalizedWeightParam(value=16.599999999999998)", "RidgeClassifier": "UnormalizedWeightParam(value=2.0)", "RidgeClassifier_alpha": "MeanDevParam(\n    mean=1.5803332112240898,\n    dev=0.0,\n    initial_params=[-0.0019999999999997797, 19.985999999999997],\n)", "RidgeClassifier_fit_intercept": "WeightParam(value=0.0)", "RidgeClassifier_normalize": "WeightParam(value=0.0)", "RidgeClassifier_tol": "MeanDevParam(mean=-0.005, dev=0.0, initial_params=[-0.002, 0.006])", "RidgeClassifier_solver": "DistributionParam(\n    weights=[\n        0.07142857142857144,\n        0.07142857142857144,\n        0.07142857142857144,\n        0.07142857142857144,\n        0.07142857142857144,\n        0.07142857142857144,\n        0.5714285714285714,\n    ]\n)", "RadiusNeighborsTransformer": "UnormalizedWeightParam(value=1)", "RadiusNeighborsTransformer_mode": "DistributionParam(weights=[0.5, 0.5])", "RadiusNeighborsTransformer_radius": "MeanDevParam(\n    mean=-0.0019999999999997797,\n    dev=19.985999999999997,\n    initial_params=(-0.0019999999999997797, 19.985999999999997),\n)", "RadiusNeighborsTransformer_algorithm": "DistributionParam(weights=[0.25, 0.25, 0.25, 0.25])", "RadiusNeighborsTransformer_leaf_size": "MeanDevParam(mean=30.0, dev=58, initial_params=(30.0, 58))", "RadiusNeighborsTransformer_p": "MeanDevParam(mean=2.0, dev=2, initial_params=(2.0, 2))"}, {"End": "UnormalizedWeightParam(value=16.599999999999998)", "MiniBatchSparsePCA": "UnormalizedWeightParam(value=2.05)", "MiniBatchSparsePCA_ridge_alpha": "MeanDevParam(\n    mean=-0.017902511309715412, dev=0.0, initial_params=[0.0005000000000000004, 0.187]\n)", "MiniBatchSparsePCA_n_iter": "MeanDevParam(mean=158.99999999999997, dev=0.0, initial_params=[100.0, 198.0])", "MiniBatchSparsePCA_batch_size": "MeanDevParam(mean=5.0, dev=0.0, initial_params=[3.0, 4.0])", "MiniBatchSparsePCA_shuffle": "WeightParam(value=0.0)", "MiniBatchSparsePCA_method": "DistributionParam(weights=[0.23809523809523808, 0.7619047619047619])", "MeanShift": "UnormalizedWeightParam(value=1)", "MeanShift_bin_seeding": "WeightParam(value=0.5)", "MeanShift_cluster_all": "WeightParam(value=0.5)"}, {"End": "UnormalizedWeightParam(value=16.599999999999998)", "MultinomialNB": "UnormalizedWeightParam(value=3.0)", "MultinomialNB_fit_prior": "WeightParam(value=0.0)"}, {"End": "UnormalizedWeightParam(value=16.599999999999998)", "LinearSVC": "UnormalizedWeightParam(value=2.2499999999999996)", "LinearSVC_penalty": "DistributionParam(weights=[1.0])", "LinearSVC_loss": "DistributionParam(weights=[0.26451740116336386, 0.7354825988366361])", "LinearSVC_dual": "WeightParam(value=1.0)", "LinearSVC_C": "MeanDevParam(mean=0.005, dev=0.0, initial_params=[4.998, 9.985999999999999])", "LinearSVC_multi_class": "DistributionParam(weights=[0.7377501725327812, 0.26224982746721875])", "LinearSVC_fit_intercept": "WeightParam(value=1.0)", "PCA": "UnormalizedWeightParam(value=2.0)", "PCA_whiten": "WeightParam(value=1.0)", "PCA_svd_solver": "DistributionParam(weights=[0.125, 0.125, 0.125, 0.625])", "PCA_tol": "MeanDevParam(mean=0.992, dev=0.0, initial_params=[0.0, 1.984])", "PCA_iterated_power": "DistributionParam(weights=[0.25, 0.75])"}, {"End": "UnormalizedWeightParam(value=16.599999999999998)", "MiniBatchKMeans": "UnormalizedWeightParam(value=1)", "PowerTransformer": "UnormalizedWeightParam(value=1)", "MiniBatchKMeans_n_clusters": "MeanDevParam(mean=8.0, dev=14, initial_params=(8.0, 14))", "MiniBatchKMeans_init": "DistributionParam(weights=[1.0])", "MiniBatchKMeans_compute_labels": "WeightParam(value=0.5)", "MiniBatchKMeans_tol": "MeanDevParam(mean=0.0, dev=1.984, initial_params=(0.0, 1.984))", "MiniBatchKMeans_max_no_improvement": "MeanDevParam(mean=10.0, dev=18, initial_params=(10.0, 18))", "MiniBatchKMeans_reassignment_ratio": "MeanDevParam(\n    mean=0.0005000000000000004, dev=0.187, initial_params=(0.0005000000000000004, 0.187)\n)", "PowerTransformer_standardize": "WeightParam(value=0.5)"}, {"End": "UnormalizedWeightParam(value=16.599999999999998)", "MeanShift": "UnormalizedWeightParam(value=1)", "MeanShift_bin_seeding": "WeightParam(value=0.5)", "MeanShift_cluster_all": "WeightParam(value=0.5)"}, {"BernoulliNB": "UnormalizedWeightParam(value=1)", "RadiusNeighborsTransformer": "UnormalizedWeightParam(value=1)", "End": "UnormalizedWeightParam(value=1)", "RadiusNeighborsTransformer_mode": "DistributionParam(weights=[0.5, 0.5])", "RadiusNeighborsTransformer_radius": "MeanDevParam(\n    mean=-0.0019999999999997797,\n    dev=19.985999999999997,\n    initial_params=(-0.0019999999999997797, 19.985999999999997),\n)", "RadiusNeighborsTransformer_algorithm": "DistributionParam(weights=[0.25, 0.25, 0.25, 0.25])", "RadiusNeighborsTransformer_leaf_size": "MeanDevParam(mean=30.0, dev=58, initial_params=(30.0, 58))", "RadiusNeighborsTransformer_p": "MeanDevParam(mean=2.0, dev=2, initial_params=(2.0, 2))", "BernoulliNB_alpha": "MeanDevParam(mean=4.9955, dev=9.991, initial_params=(4.9955, 9.991))", "BernoulliNB_binarize": "MeanDevParam(mean=0.0, dev=1.984, initial_params=(0.0, 1.984))", "BernoulliNB_fit_prior": "WeightParam(value=0.5)"}, {"NearestCentroid": "UnormalizedWeightParam(value=1)", "PowerTransformer": "UnormalizedWeightParam(value=1)", "End": "UnormalizedWeightParam(value=1)", "PowerTransformer_standardize": "WeightParam(value=0.5)"}, {"End": "UnormalizedWeightParam(value=16.799999999999997)", "LogisticRegression": "UnormalizedWeightParam(value=3.0)", "LogisticRegression_penalty": "DistributionParam(weights=[0.16666666666666666, 0.8333333333333334])", "LogisticRegression_dual": "WeightParam(value=1.0)", "LogisticRegression_C": "MeanDevParam(\n    mean=4.998, dev=7.061168316928863, initial_params=[4.998, 9.985999999999999]\n)", "LogisticRegression_fit_intercept": "WeightParam(value=0.5)", "LogisticRegression_solver": "DistributionParam(\n    weights=[\n        0.4166666666666667,\n        0.08333333333333333,\n        0.4166666666666667,\n        0.08333333333333333,\n    ]\n)", "LogisticRegression_multi_class": "DistributionParam(weights=[0.4444444444444444, 0.4444444444444444, 0.1111111111111111])", "TfidfTransformer": "UnormalizedWeightParam(value=2.0)", "TfidfTransformer_norm": "DistributionParam(weights=[0.25, 0.75])", "TfidfTransformer_use_idf": "WeightParam(value=0.0)", "TfidfTransformer_smooth_idf": "WeightParam(value=1.0)", "TfidfTransformer_sublinear_tf": "WeightParam(value=1.0)", "SparsePCA": "UnormalizedWeightParam(value=2.0)", "SparsePCA_ridge_alpha": "MeanDevParam(\n    mean=0.03681846705741536, dev=0.0, initial_params=[0.0005000000000000004, 0.187]\n)", "SparsePCA_method": "DistributionParam(weights=[0.75, 0.25])"}, {"LocallyLinearEmbedding": "UnormalizedWeightParam(value=5.0)", "End": "UnormalizedWeightParam(value=16.799999999999997)", "LocallyLinearEmbedding_n_neighbors": "MeanDevParam(mean=1.0, dev=0.0, initial_params=[5.0, 8.0])", "LocallyLinearEmbedding_n_components": "MeanDevParam(mean=1.75, dev=0.9574271077563381, initial_params=[2.0, 2.0])", "LocallyLinearEmbedding_reg": "MeanDevParam(\n    mean=-0.0019693318014123566, dev=0.00265136765127084, initial_params=[-0.002, 0.006]\n)", "LocallyLinearEmbedding_eigen_solver": "DistributionParam(weights=[0.2666666666666667, 0.4666666666666667, 0.2666666666666667])", "LocallyLinearEmbedding_method": "DistributionParam(weights=[0.2666666666666667, 0.4666666666666667, 0.2666666666666667])", "LocallyLinearEmbedding_neighbors_algorithm": "DistributionParam(weights=[0.25, 0.25, 0.25, 0.25])", "MiniBatchKMeans": "UnormalizedWeightParam(value=1)", "MiniBatchKMeans_n_clusters": "MeanDevParam(mean=8.0, dev=14, initial_params=(8.0, 14))", "MiniBatchKMeans_init": "DistributionParam(weights=[1.0])", "MiniBatchKMeans_compute_labels": "WeightParam(value=0.5)", "MiniBatchKMeans_tol": "MeanDevParam(mean=0.0, dev=1.984, initial_params=(0.0, 1.984))", "MiniBatchKMeans_max_no_improvement": "MeanDevParam(mean=10.0, dev=18, initial_params=(10.0, 18))", "MiniBatchKMeans_reassignment_ratio": "MeanDevParam(\n    mean=0.0005000000000000004, dev=0.187, initial_params=(0.0005000000000000004, 0.187)\n)"}, {"End": "UnormalizedWeightParam(value=16.799999999999997)", "CategoricalNB": "UnormalizedWeightParam(value=3.3000000000000003)", "CategoricalNB_fit_prior": "WeightParam(value=1.0)"}, {"End": "UnormalizedWeightParam(value=16.799999999999997)", "DecisionTreeClassifier": "UnormalizedWeightParam(value=2.0)", "DecisionTreeClassifier_min_samples_split": "MeanDevParam(mean=2.0, dev=0.0, initial_params=[2.5, 1.0])", "DecisionTreeClassifier_min_weight_fraction_leaf": "MeanDevParam(mean=0.0, dev=0.0, initial_params=[0.25, 0.5])", "DecisionTreeClassifier_min_impurity_decrease": "MeanDevParam(mean=0.4552573957735166, dev=0.0, initial_params=[0.496, 0.992])", "DecisionTreeClassifier_ccp_alpha": "MeanDevParam(mean=0.992, dev=0.0, initial_params=[0.496, 0.992])", "PowerTransformer": "UnormalizedWeightParam(value=1)", "PowerTransformer_standardize": "WeightParam(value=0.5)"}, {"End": "UnormalizedWeightParam(value=16.799999999999997)", "LinearSVC": "UnormalizedWeightParam(value=2.2499999999999996)", "LinearSVC_penalty": "DistributionParam(weights=[1.0])", "LinearSVC_loss": "DistributionParam(weights=[0.26451740116336386, 0.7354825988366361])", "LinearSVC_dual": "WeightParam(value=1.0)", "LinearSVC_C": "MeanDevParam(mean=0.005, dev=0.0, initial_params=[4.998, 9.985999999999999])", "LinearSVC_multi_class": "DistributionParam(weights=[0.7377501725327812, 0.26224982746721875])", "LinearSVC_fit_intercept": "WeightParam(value=1.0)"}, {"End": "UnormalizedWeightParam(value=16.799999999999997)", "RidgeClassifier": "UnormalizedWeightParam(value=2.05)", "RidgeClassifier_alpha": "MeanDevParam(\n    mean=1.8578538206006923,\n    dev=0.0,\n    initial_params=[-0.0019999999999997797, 19.985999999999997],\n)", "RidgeClassifier_fit_intercept": "WeightParam(value=0.05)", "RidgeClassifier_normalize": "WeightParam(value=0.0)", "RidgeClassifier_tol": "MeanDevParam(mean=-0.0047, dev=0.0, initial_params=[-0.002, 0.006])", "RidgeClassifier_solver": "DistributionParam(\n    weights=[\n        0.06802721088435375,\n        0.06802721088435375,\n        0.11564625850340136,\n        0.06802721088435375,\n        0.06802721088435375,\n        0.06802721088435375,\n        0.5442176870748299,\n    ]\n)"}, {"End": "UnormalizedWeightParam(value=16.799999999999997)", "CategoricalNB": "UnormalizedWeightParam(value=3.3000000000000003)", "CategoricalNB_fit_prior": "WeightParam(value=1.0)"}, {"End": "UnormalizedWeightParam(value=16.799999999999997)", "BernoulliNB": "UnormalizedWeightParam(value=1)", "BernoulliNB_alpha": "MeanDevParam(mean=4.9955, dev=9.991, initial_params=(4.9955, 9.991))", "BernoulliNB_binarize": "MeanDevParam(mean=0.0, dev=1.984, initial_params=(0.0, 1.984))", "BernoulliNB_fit_prior": "WeightParam(value=0.5)"}, {"LocallyLinearEmbedding": "UnormalizedWeightParam(value=5.0)", "End": "UnormalizedWeightParam(value=16.799999999999997)", "LocallyLinearEmbedding_n_neighbors": "MeanDevParam(mean=1.0, dev=0.0, initial_params=[5.0, 8.0])", "LocallyLinearEmbedding_n_components": "MeanDevParam(mean=1.75, dev=0.9574271077563381, initial_params=[2.0, 2.0])", "LocallyLinearEmbedding_reg": "MeanDevParam(\n    mean=-0.0019693318014123566, dev=0.00265136765127084, initial_params=[-0.002, 0.006]\n)", "LocallyLinearEmbedding_eigen_solver": "DistributionParam(weights=[0.2666666666666667, 0.4666666666666667, 0.2666666666666667])", "LocallyLinearEmbedding_method": "DistributionParam(weights=[0.2666666666666667, 0.4666666666666667, 0.2666666666666667])", "LocallyLinearEmbedding_neighbors_algorithm": "DistributionParam(weights=[0.25, 0.25, 0.25, 0.25])", "RidgeClassifier": "UnormalizedWeightParam(value=2.05)", "RidgeClassifier_alpha": "MeanDevParam(\n    mean=1.8578538206006923,\n    dev=0.0,\n    initial_params=[-0.0019999999999997797, 19.985999999999997],\n)", "RidgeClassifier_fit_intercept": "WeightParam(value=0.05)", "RidgeClassifier_normalize": "WeightParam(value=0.0)", "RidgeClassifier_tol": "MeanDevParam(mean=-0.0047, dev=0.0, initial_params=[-0.002, 0.006])", "RidgeClassifier_solver": "DistributionParam(\n    weights=[\n        0.06802721088435375,\n        0.06802721088435375,\n        0.11564625850340136,\n        0.06802721088435375,\n        0.06802721088435375,\n        0.06802721088435375,\n        0.5442176870748299,\n    ]\n)"}, {"End": "UnormalizedWeightParam(value=16.799999999999997)", "ExtraTreeClassifier": "UnormalizedWeightParam(value=2.0)", "ExtraTreeClassifier_min_samples_split": "MeanDevParam(mean=3.0, dev=0.0, initial_params=[2.5, 1.0])", "ExtraTreeClassifier_min_weight_fraction_leaf": "MeanDevParam(mean=0.0, dev=0.0, initial_params=[0.25, 0.5])", "ExtraTreeClassifier_min_impurity_decrease": "MeanDevParam(mean=0.0, dev=0.0, initial_params=[0.496, 0.992])", "ExtraTreeClassifier_ccp_alpha": "MeanDevParam(mean=0.992, dev=0.0, initial_params=[0.496, 0.992])"}, {"End": "UnormalizedWeightParam(value=16.799999999999997)", "DecisionTreeClassifier": "UnormalizedWeightParam(value=2.0)", "DecisionTreeClassifier_min_samples_split": "MeanDevParam(mean=2.0, dev=0.0, initial_params=[2.5, 1.0])", "DecisionTreeClassifier_min_weight_fraction_leaf": "MeanDevParam(mean=0.0, dev=0.0, initial_params=[0.25, 0.5])", "DecisionTreeClassifier_min_impurity_decrease": "MeanDevParam(mean=0.4552573957735166, dev=0.0, initial_params=[0.496, 0.992])", "DecisionTreeClassifier_ccp_alpha": "MeanDevParam(mean=0.992, dev=0.0, initial_params=[0.496, 0.992])"}, {"End": "UnormalizedWeightParam(value=16.799999999999997)", "OneClassSVM": "UnormalizedWeightParam(value=1)", "OneClassSVM_kernel": "DistributionParam(weights=[0.25, 0.25, 0.25, 0.25])", "OneClassSVM_degree": "MeanDevParam(mean=3.0, dev=4, initial_params=(3.0, 4))", "OneClassSVM_gamma": "DistributionParam(weights=[0.5, 0.5])", "OneClassSVM_coef0": "MeanDevParam(mean=0.0, dev=1.984, initial_params=(0.0, 1.984))", "OneClassSVM_shrinking": "WeightParam(value=0.5)", "OneClassSVM_cache_size": "MeanDevParam(mean=200.0, dev=398, initial_params=(200.0, 398))"}, {"End": "UnormalizedWeightParam(value=16.799999999999997)", "LogisticRegression": "UnormalizedWeightParam(value=3.0)", "LogisticRegression_penalty": "DistributionParam(weights=[0.16666666666666666, 0.8333333333333334])", "LogisticRegression_dual": "WeightParam(value=1.0)", "LogisticRegression_C": "MeanDevParam(\n    mean=4.998, dev=7.061168316928863, initial_params=[4.998, 9.985999999999999]\n)", "LogisticRegression_fit_intercept": "WeightParam(value=0.5)", "LogisticRegression_solver": "DistributionParam(\n    weights=[\n        0.4166666666666667,\n        0.08333333333333333,\n        0.4166666666666667,\n        0.08333333333333333,\n    ]\n)", "LogisticRegression_multi_class": "DistributionParam(weights=[0.4444444444444444, 0.4444444444444444, 0.1111111111111111])", "KBinsDiscretizer": "UnormalizedWeightParam(value=2.0)", "KBinsDiscretizer_n_bins": "MeanDevParam(mean=6.0, dev=0.0, initial_params=[5.5, 7.0])", "KBinsDiscretizer_encode": "DistributionParam(weights=[0.75, 0.25])", "KBinsDiscretizer_strategy": "DistributionParam(\n    weights=[0.16666666666666669, 0.6666666666666667, 0.16666666666666669]\n)"}, {"End": "UnormalizedWeightParam(value=16.799999999999997)", "FastICA": "UnormalizedWeightParam(value=2.05)", "FastICA_algorithm": "DistributionParam(weights=[0.2857142857142857, 0.7142857142857143])", "FastICA_whiten": "WeightParam(value=0.0)", "FastICA_fun": "DistributionParam(weights=[0.20634920634920634, 0.634920634920635, 0.15873015873015875])", "ExtraTreeClassifier": "UnormalizedWeightParam(value=2.0)", "ExtraTreeClassifier_min_samples_split": "MeanDevParam(mean=3.0, dev=0.0, initial_params=[2.5, 1.0])", "ExtraTreeClassifier_min_weight_fraction_leaf": "MeanDevParam(mean=0.0, dev=0.0, initial_params=[0.25, 0.5])", "ExtraTreeClassifier_min_impurity_decrease": "MeanDevParam(mean=0.0, dev=0.0, initial_params=[0.496, 0.992])", "ExtraTreeClassifier_ccp_alpha": "MeanDevParam(mean=0.992, dev=0.0, initial_params=[0.496, 0.992])"}, {"End": "UnormalizedWeightParam(value=16.799999999999997)", "SparsePCA": "UnormalizedWeightParam(value=2.0)", "SparsePCA_ridge_alpha": "MeanDevParam(\n    mean=0.03681846705741536, dev=0.0, initial_params=[0.0005000000000000004, 0.187]\n)", "SparsePCA_method": "DistributionParam(weights=[0.75, 0.25])", "KNeighborsClassifier": "UnormalizedWeightParam(value=1)", "KNeighborsClassifier_n_neighbors": "MeanDevParam(mean=5.0, dev=8, initial_params=(5.0, 8))", "KNeighborsClassifier_weights": "DistributionParam(weights=[0.5, 0.5])", "KNeighborsClassifier_algorithm": "DistributionParam(weights=[0.25, 0.25, 0.25, 0.25])", "KNeighborsClassifier_leaf_size": "MeanDevParam(mean=30.0, dev=58, initial_params=(30.0, 58))", "KNeighborsClassifier_p": "MeanDevParam(mean=2.0, dev=2, initial_params=(2.0, 2))", "KNeighborsClassifier_metric": "DistributionParam(weights=[1.0])"}, {"End": "UnormalizedWeightParam(value=16.799999999999997)", "SparsePCA": "UnormalizedWeightParam(value=2.0)", "SparsePCA_ridge_alpha": "MeanDevParam(\n    mean=0.03681846705741536, dev=0.0, initial_params=[0.0005000000000000004, 0.187]\n)", "SparsePCA_method": "DistributionParam(weights=[0.75, 0.25])", "RidgeClassifier": "UnormalizedWeightParam(value=2.05)", "RidgeClassifier_alpha": "MeanDevParam(\n    mean=1.8578538206006923,\n    dev=0.0,\n    initial_params=[-0.0019999999999997797, 19.985999999999997],\n)", "RidgeClassifier_fit_intercept": "WeightParam(value=0.05)", "RidgeClassifier_normalize": "WeightParam(value=0.0)", "RidgeClassifier_tol": "MeanDevParam(mean=-0.0047, dev=0.0, initial_params=[-0.002, 0.006])", "RidgeClassifier_solver": "DistributionParam(\n    weights=[\n        0.06802721088435375,\n        0.06802721088435375,\n        0.11564625850340136,\n        0.06802721088435375,\n        0.06802721088435375,\n        0.06802721088435375,\n        0.5442176870748299,\n    ]\n)"}, {"End": "UnormalizedWeightParam(value=16.799999999999997)", "FastICA": "UnormalizedWeightParam(value=2.05)", "FastICA_algorithm": "DistributionParam(weights=[0.2857142857142857, 0.7142857142857143])", "FastICA_whiten": "WeightParam(value=0.0)", "FastICA_fun": "DistributionParam(weights=[0.20634920634920634, 0.634920634920635, 0.15873015873015875])", "BernoulliNB": "UnormalizedWeightParam(value=1)", "BernoulliNB_alpha": "MeanDevParam(mean=4.9955, dev=9.991, initial_params=(4.9955, 9.991))", "BernoulliNB_binarize": "MeanDevParam(mean=0.0, dev=1.984, initial_params=(0.0, 1.984))", "BernoulliNB_fit_prior": "WeightParam(value=0.5)"}, {"LocallyLinearEmbedding": "UnormalizedWeightParam(value=5.0)", "End": "UnormalizedWeightParam(value=16.799999999999997)", "LocallyLinearEmbedding_n_neighbors": "MeanDevParam(mean=1.0, dev=0.0, initial_params=[5.0, 8.0])", "LocallyLinearEmbedding_n_components": "MeanDevParam(mean=1.75, dev=0.9574271077563381, initial_params=[2.0, 2.0])", "LocallyLinearEmbedding_reg": "MeanDevParam(\n    mean=-0.0019693318014123566, dev=0.00265136765127084, initial_params=[-0.002, 0.006]\n)", "LocallyLinearEmbedding_eigen_solver": "DistributionParam(weights=[0.2666666666666667, 0.4666666666666667, 0.2666666666666667])", "LocallyLinearEmbedding_method": "DistributionParam(weights=[0.2666666666666667, 0.4666666666666667, 0.2666666666666667])", "LocallyLinearEmbedding_neighbors_algorithm": "DistributionParam(weights=[0.25, 0.25, 0.25, 0.25])", "KNeighborsClassifier": "UnormalizedWeightParam(value=1)", "KNeighborsClassifier_n_neighbors": "MeanDevParam(mean=5.0, dev=8, initial_params=(5.0, 8))", "KNeighborsClassifier_weights": "DistributionParam(weights=[0.5, 0.5])", "KNeighborsClassifier_algorithm": "DistributionParam(weights=[0.25, 0.25, 0.25, 0.25])", "KNeighborsClassifier_leaf_size": "MeanDevParam(mean=30.0, dev=58, initial_params=(30.0, 58))", "KNeighborsClassifier_p": "MeanDevParam(mean=2.0, dev=2, initial_params=(2.0, 2))", "KNeighborsClassifier_metric": "DistributionParam(weights=[1.0])"}, {"KerasClassifier": "UnormalizedWeightParam(value=1)", "PowerTransformer": "UnormalizedWeightParam(value=1)", "End": "UnormalizedWeightParam(value=1)", "PowerTransformer_standardize": "WeightParam(value=0.5)", "KerasClassifier_optimizer": "DistributionParam(weights=[0.3333333333333333, 0.3333333333333333, 0.3333333333333333])", "production_8": "UnormalizedWeightParam(value=1)"}, {"KNeighborsClassifier": "UnormalizedWeightParam(value=1)", "End": "UnormalizedWeightParam(value=1)", "KNeighborsClassifier_n_neighbors": "MeanDevParam(mean=5.0, dev=8, initial_params=(5.0, 8))", "KNeighborsClassifier_weights": "DistributionParam(weights=[0.5, 0.5])", "KNeighborsClassifier_algorithm": "DistributionParam(weights=[0.25, 0.25, 0.25, 0.25])", "KNeighborsClassifier_leaf_size": "MeanDevParam(mean=30.0, dev=58, initial_params=(30.0, 58))", "KNeighborsClassifier_p": "MeanDevParam(mean=2.0, dev=2, initial_params=(2.0, 2))", "KNeighborsClassifier_metric": "DistributionParam(weights=[1.0])"}, {"End": "UnormalizedWeightParam(value=16.999999999999996)", "NearestCentroid": "UnormalizedWeightParam(value=2.05)"}, {"End": "UnormalizedWeightParam(value=16.999999999999996)", "CategoricalNB": "UnormalizedWeightParam(value=3.4000000000000004)", "CategoricalNB_fit_prior": "WeightParam(value=1.0)", "FactorAnalysis": "UnormalizedWeightParam(value=1)", "FactorAnalysis_tol": "MeanDevParam(\n    mean=0.0005000000000000004, dev=0.187, initial_params=(0.0005000000000000004, 0.187)\n)", "FactorAnalysis_svd_method": "DistributionParam(weights=[0.5, 0.5])", "FactorAnalysis_iterated_power": "MeanDevParam(mean=3.0, dev=4, initial_params=(3.0, 4))"}, {"End": "UnormalizedWeightParam(value=16.999999999999996)", "TfidfTransformer": "UnormalizedWeightParam(value=2.0)", "TfidfTransformer_norm": "DistributionParam(weights=[0.25, 0.75])", "TfidfTransformer_use_idf": "WeightParam(value=0.0)", "TfidfTransformer_smooth_idf": "WeightParam(value=1.0)", "TfidfTransformer_sublinear_tf": "WeightParam(value=1.0)", "OneClassSVM": "UnormalizedWeightParam(value=1)", "OneClassSVM_kernel": "DistributionParam(weights=[0.25, 0.25, 0.25, 0.25])", "OneClassSVM_degree": "MeanDevParam(mean=3.0, dev=4, initial_params=(3.0, 4))", "OneClassSVM_gamma": "DistributionParam(weights=[0.5, 0.5])", "OneClassSVM_coef0": "MeanDevParam(mean=0.0, dev=1.984, initial_params=(0.0, 1.984))", "OneClassSVM_shrinking": "WeightParam(value=0.5)", "OneClassSVM_cache_size": "MeanDevParam(mean=200.0, dev=398, initial_params=(200.0, 398))"}, {"End": "UnormalizedWeightParam(value=16.999999999999996)", "LogisticRegression": "UnormalizedWeightParam(value=3.0)", "LogisticRegression_penalty": "DistributionParam(weights=[0.16666666666666666, 0.8333333333333334])", "LogisticRegression_dual": "WeightParam(value=1.0)", "LogisticRegression_C": "MeanDevParam(\n    mean=4.998, dev=7.061168316928863, initial_params=[4.998, 9.985999999999999]\n)", "LogisticRegression_fit_intercept": "WeightParam(value=0.5)", "LogisticRegression_solver": "DistributionParam(\n    weights=[\n        0.4166666666666667,\n        0.08333333333333333,\n        0.4166666666666667,\n        0.08333333333333333,\n    ]\n)", "LogisticRegression_multi_class": "DistributionParam(weights=[0.4444444444444444, 0.4444444444444444, 0.1111111111111111])", "PCA": "UnormalizedWeightParam(value=2.0)", "PCA_whiten": "WeightParam(value=1.0)", "PCA_svd_solver": "DistributionParam(weights=[0.125, 0.125, 0.125, 0.625])", "PCA_tol": "MeanDevParam(mean=0.992, dev=0.0, initial_params=[0.0, 1.984])", "PCA_iterated_power": "DistributionParam(weights=[0.25, 0.75])", "KNeighborsTransformer": "UnormalizedWeightParam(value=1)", "KNeighborsTransformer_mode": "DistributionParam(weights=[0.5, 0.5])", "KNeighborsTransformer_n_neighbors": "MeanDevParam(mean=5.0, dev=8, initial_params=(5.0, 8))", "KNeighborsTransformer_algorithm": "DistributionParam(weights=[0.25, 0.25, 0.25, 0.25])", "KNeighborsTransformer_leaf_size": "MeanDevParam(mean=30.0, dev=58, initial_params=(30.0, 58))", "KNeighborsTransformer_p": "MeanDevParam(mean=2.0, dev=2, initial_params=(2.0, 2))"}, {"End": "UnormalizedWeightParam(value=16.999999999999996)", "KBinsDiscretizer": "UnormalizedWeightParam(value=2.0)", "KBinsDiscretizer_n_bins": "MeanDevParam(mean=6.0, dev=0.0, initial_params=[5.5, 7.0])", "KBinsDiscretizer_encode": "DistributionParam(weights=[0.75, 0.25])", "KBinsDiscretizer_strategy": "DistributionParam(\n    weights=[0.16666666666666669, 0.6666666666666667, 0.16666666666666669]\n)", "OneClassSVM": "UnormalizedWeightParam(value=1)", "OneClassSVM_kernel": "DistributionParam(weights=[0.25, 0.25, 0.25, 0.25])", "OneClassSVM_degree": "MeanDevParam(mean=3.0, dev=4, initial_params=(3.0, 4))", "OneClassSVM_gamma": "DistributionParam(weights=[0.5, 0.5])", "OneClassSVM_coef0": "MeanDevParam(mean=0.0, dev=1.984, initial_params=(0.0, 1.984))", "OneClassSVM_shrinking": "WeightParam(value=0.5)", "OneClassSVM_cache_size": "MeanDevParam(mean=200.0, dev=398, initial_params=(200.0, 398))"}, {"End": "UnormalizedWeightParam(value=16.999999999999996)", "RobustScaler": "UnormalizedWeightParam(value=2.0)", "RobustScaler_with_centering": "WeightParam(value=0.0)", "RobustScaler_with_scaling": "WeightParam(value=0.0)", "KMeans": "UnormalizedWeightParam(value=1)", "KMeans_n_clusters": "MeanDevParam(mean=8.0, dev=14, initial_params=(8.0, 14))", "KMeans_init": "DistributionParam(weights=[1.0])", "KMeans_precompute_distances": "DistributionParam(weights=[1.0])"}, {"End": "UnormalizedWeightParam(value=16.999999999999996)", "KerasClassifier": "UnormalizedWeightParam(value=2.0)", "KerasClassifier_optimizer": "DistributionParam(\n    weights=[0.6666666666666667, 0.16666666666666669, 0.16666666666666669]\n)", "production_8": "UnormalizedWeightParam(value=2.0)"}, {"End": "UnormalizedWeightParam(value=16.999999999999996)", "LogisticRegression": "UnormalizedWeightParam(value=3.0)", "LogisticRegression_penalty": "DistributionParam(weights=[0.16666666666666666, 0.8333333333333334])", "LogisticRegression_dual": "WeightParam(value=1.0)", "LogisticRegression_C": "MeanDevParam(\n    mean=4.998, dev=7.061168316928863, initial_params=[4.998, 9.985999999999999]\n)", "LogisticRegression_fit_intercept": "WeightParam(value=0.5)", "LogisticRegression_solver": "DistributionParam(\n    weights=[\n        0.4166666666666667,\n        0.08333333333333333,\n        0.4166666666666667,\n        0.08333333333333333,\n    ]\n)", "LogisticRegression_multi_class": "DistributionParam(weights=[0.4444444444444444, 0.4444444444444444, 0.1111111111111111])"}, {"End": "UnormalizedWeightParam(value=16.999999999999996)", "NearestCentroid": "UnormalizedWeightParam(value=2.05)"}, {"End": "UnormalizedWeightParam(value=16.999999999999996)", "KerasClassifier": "UnormalizedWeightParam(value=2.0)", "KerasClassifier_optimizer": "DistributionParam(\n    weights=[0.6666666666666667, 0.16666666666666669, 0.16666666666666669]\n)", "production_8": "UnormalizedWeightParam(value=2.0)", "production_7": "UnormalizedWeightParam(value=1)", "production_9": "UnormalizedWeightParam(value=1)", "production_10": "UnormalizedWeightParam(value=1)", "production_11": "UnormalizedWeightParam(value=1)", "production_12": "UnormalizedWeightParam(value=1)"}, {"End": "UnormalizedWeightParam(value=16.999999999999996)", "OneClassSVM": "UnormalizedWeightParam(value=1)", "OneClassSVM_kernel": "DistributionParam(weights=[0.25, 0.25, 0.25, 0.25])", "OneClassSVM_degree": "MeanDevParam(mean=3.0, dev=4, initial_params=(3.0, 4))", "OneClassSVM_gamma": "DistributionParam(weights=[0.5, 0.5])", "OneClassSVM_coef0": "MeanDevParam(mean=0.0, dev=1.984, initial_params=(0.0, 1.984))", "OneClassSVM_shrinking": "WeightParam(value=0.5)", "OneClassSVM_cache_size": "MeanDevParam(mean=200.0, dev=398, initial_params=(200.0, 398))"}, {"End": "UnormalizedWeightParam(value=16.999999999999996)", "LatentDirichletAllocation": "UnormalizedWeightParam(value=2.0)", "GaussianNB": "UnormalizedWeightParam(value=1)"}], "generations": [0, 20, 40, 60, 80, 94], "best_fn": 0.9521604938271605}