{"failed_pipelines": 20, "scores": [-Infinity, 0.7995255041518387, 0.966785290628707, 0.09252669039145907, 0.8463819691577699, 0.9827995255041518, -Infinity, -Infinity, -Infinity, 0.03262158956109134, 0.08896797153024912, 0.9845788849347569, -Infinity, -Infinity, -Infinity, 0.09252669039145907, -Infinity, -Infinity, 0.9905100830367735, 0.9062870699881376, 0.9424673784104389, -Infinity, -Infinity, -Infinity, 0.03262158956109134, -Infinity, -Infinity, -Infinity, -Infinity, 0.099644128113879, -Infinity, 0.7117437722419929, -Infinity, -Infinity, 0.09252669039145907, 0.966785290628707, 0.9086595492289442, 0.9691577698695136, -Infinity], "pipelines": [{"LatentDirichletAllocation": [1], "NuSVC": [1], "End": [1], "NuSVC_kernel": [0], "NuSVC_degree": [4], "NuSVC_gamma": [1], "NuSVC_coef0": [0.992], "NuSVC_shrinking": [true], "NuSVC_probability": [false], "NuSVC_cache_size": [316], "NuSVC_decision_function_shape": [0], "NuSVC_break_ties": [true]}, {"GaussianNB": [1], "End": [1]}, {"LinearSVC": [1], "End": [1], "LinearSVC_penalty": [0], "LinearSVC_loss": [1], "LinearSVC_dual": [true], "LinearSVC_C": [0.005], "LinearSVC_multi_class": [0], "LinearSVC_fit_intercept": [true]}, {"RadiusNeighborsTransformer": [1], "BernoulliNB": [1], "End": [1], "RadiusNeighborsTransformer_mode": [0], "RadiusNeighborsTransformer_radius": [-9.995], "RadiusNeighborsTransformer_algorithm": [2], "RadiusNeighborsTransformer_leaf_size": [1], "RadiusNeighborsTransformer_p": [1], "BernoulliNB_alpha": [0.0], "BernoulliNB_binarize": [-0.992], "BernoulliNB_fit_prior": [true]}, {"KBinsDiscretizer": [1], "BernoulliNB": [1], "End": [1], "KBinsDiscretizer_n_bins": [6], "KBinsDiscretizer_encode": [0], "KBinsDiscretizer_strategy": [1], "BernoulliNB_alpha": [9.991], "BernoulliNB_binarize": [0.992], "BernoulliNB_fit_prior": [false]}, {"KNeighborsClassifier": [1], "End": [1], "KNeighborsClassifier_n_neighbors": [9], "KNeighborsClassifier_weights": [1], "KNeighborsClassifier_algorithm": [2], "KNeighborsClassifier_leaf_size": [1], "KNeighborsClassifier_p": [3], "KNeighborsClassifier_metric": [0]}, {"CategoricalNB": [1], "End": [1], "CategoricalNB_fit_prior": [true]}, {"FastICA": [1], "RadiusNeighborsTransformer": [1], "LogisticRegression": [1], "End": [1], "FastICA_algorithm": [1], "FastICA_whiten": [false], "FastICA_fun": [1], "RadiusNeighborsTransformer_mode": [1], "RadiusNeighborsTransformer_radius": [9.991], "RadiusNeighborsTransformer_algorithm": [3], "RadiusNeighborsTransformer_leaf_size": [1], "RadiusNeighborsTransformer_p": [1], "LogisticRegression_penalty": [1], "LogisticRegression_dual": [false], "LogisticRegression_C": [8.576198881554332], "LogisticRegression_fit_intercept": [true], "LogisticRegression_solver": [3], "LogisticRegression_multi_class": [1]}, {"LatentDirichletAllocation": [1], "RadiusNeighborsTransformer": [1], "PassiveAggressiveClassifier": [1], "End": [1], "RadiusNeighborsTransformer_mode": [1], "RadiusNeighborsTransformer_radius": [9.991], "RadiusNeighborsTransformer_algorithm": [3], "RadiusNeighborsTransformer_leaf_size": [1], "RadiusNeighborsTransformer_p": [2], "PassiveAggressiveClassifier_C": [-6.343529712044343], "PassiveAggressiveClassifier_fit_intercept": [false], "PassiveAggressiveClassifier_tol": [-0.005], "PassiveAggressiveClassifier_early_stopping": [false], "PassiveAggressiveClassifier_validation_fraction": [0.006], "PassiveAggressiveClassifier_n_iter_no_change": [3], "PassiveAggressiveClassifier_shuffle": [true], "PassiveAggressiveClassifier_average": [true]}, {"Birch": [1], "End": [1], "Birch_threshold": [-2.4771467529368474], "Birch_branching_factor": [2], "Birch_n_clusters": [4], "Birch_compute_labels": [true]}, {"NMF": [1], "KMeans": [1], "End": [1], "NMF_alpha": [0.0], "NMF_l1_ratio": [0.0], "NMF_shuffle": [false], "KMeans_n_clusters": [1], "KMeans_init": [0], "KMeans_precompute_distances": [0]}, {"KNNImputer": [1], "KNeighborsClassifier": [1], "End": [1], "KNNImputer_n_neighbors": [9], "KNNImputer_weights": [0], "KNNImputer_metric": [0], "KNNImputer_add_indicator": [true], "KNeighborsClassifier_n_neighbors": [9], "KNeighborsClassifier_weights": [0], "KNeighborsClassifier_algorithm": [3], "KNeighborsClassifier_leaf_size": [1], "KNeighborsClassifier_p": [3], "KNeighborsClassifier_metric": [0]}, {"KerasClassifier": [1], "End": [1], "KerasClassifier_optimizer": [1], "production_7": [1], "production_10": [1, 1, 1, 1, 1, 1, 1, 1], "production_9": [1, 1, 1, 1, 1, 1, 1, 1, 1, 1], "production_8": [1], "production_11": [1], "production_12": [1]}, {"SparsePCA": [1], "ComplementNB": [1], "End": [1], "SparsePCA_ridge_alpha": [0.0800415555404037], "SparsePCA_method": [1], "ComplementNB_fit_prior": [false], "ComplementNB_norm": [true]}, {"FastICA": [1], "MultinomialNB": [1], "End": [1], "FastICA_algorithm": [1], "FastICA_whiten": [false], "FastICA_fun": [1], "MultinomialNB_fit_prior": [false]}, {"DecisionTreeClassifier": [1], "End": [1], "DecisionTreeClassifier_min_samples_split": [2], "DecisionTreeClassifier_min_weight_fraction_leaf": [0.0], "DecisionTreeClassifier_min_impurity_decrease": [0.4552573957735166], "DecisionTreeClassifier_ccp_alpha": [0.992]}, {"RobustScaler": [1], "LogisticRegression": [1], "End": [1], "RobustScaler_with_centering": [false], "RobustScaler_with_scaling": [true], "LogisticRegression_penalty": [1], "LogisticRegression_dual": [true], "LogisticRegression_C": [2.1711570472961874], "LogisticRegression_fit_intercept": [false], "LogisticRegression_solver": [1], "LogisticRegression_multi_class": [0]}, {"KernelPCA": [1], "LogisticRegression": [1], "End": [1], "KernelPCA_degree": [4], "KernelPCA_alpha": [-9.995], "KernelPCA_fit_inverse_transform": [true], "KernelPCA_eigen_solver": [1], "KernelPCA_tol": [99], "KernelPCA_remove_zero_eig": [true], "LogisticRegression_penalty": [1], "LogisticRegression_dual": [true], "LogisticRegression_C": [6.251207885287266], "LogisticRegression_fit_intercept": [true], "LogisticRegression_solver": [0], "LogisticRegression_multi_class": [1]}, {"SVC": [1], "End": [1], "SVC_C": [8.944403736055202], "SVC_degree": [2], "SVC_gamma": [1], "SVC_coef0": [-0.992], "SVC_shrinking": [true], "SVC_probability": [false], "SVC_cache_size": [128], "SVC_decision_function_shape": [1], "SVC_break_ties": [false]}, {"MultinomialNB": [1], "End": [1], "MultinomialNB_fit_prior": [false]}, {"MinMaxScaler": [1], "Perceptron": [1], "End": [1], "Perceptron_fit_intercept": [false], "Perceptron_tol": [0.001], "Perceptron_shuffle": [true], "Perceptron_eta0": [9.991], "Perceptron_early_stopping": [true], "Perceptron_validation_fraction": [0.006], "Perceptron_n_iter_no_change": [2]}, {"FeatureAgglomeration": [1], "RadiusNeighborsTransformer": [1], "Birch": [1], "End": [1], "FeatureAgglomeration_n_clusters": [2], "FeatureAgglomeration_affinity": [0], "FeatureAgglomeration_compute_full_tree": [0], "FeatureAgglomeration_linkage": [0], "RadiusNeighborsTransformer_mode": [1], "RadiusNeighborsTransformer_radius": [8.89993678489915], "RadiusNeighborsTransformer_algorithm": [1], "RadiusNeighborsTransformer_leaf_size": [59], "RadiusNeighborsTransformer_p": [1], "Birch_threshold": [-2.900263763432231], "Birch_branching_factor": [99], "Birch_n_clusters": [1], "Birch_compute_labels": [true]}, {"LogisticRegression": [1], "End": [1], "LogisticRegression_penalty": [1], "LogisticRegression_dual": [false], "LogisticRegression_C": [7.189461354799878], "LogisticRegression_fit_intercept": [false], "LogisticRegression_solver": [1], "LogisticRegression_multi_class": [0]}, {"LatentDirichletAllocation": [1], "LinearSVC": [1], "End": [1], "LinearSVC_penalty": [0], "LinearSVC_loss": [1], "LinearSVC_dual": [true], "LinearSVC_C": [0.005], "LinearSVC_multi_class": [0], "LinearSVC_fit_intercept": [true]}, {"Birch": [1], "End": [1], "Birch_threshold": [-2.4771467529368474], "Birch_branching_factor": [2], "Birch_n_clusters": [4], "Birch_compute_labels": [true]}, {"KernelCenterer": [1], "MultinomialNB": [1], "End": [1], "MultinomialNB_fit_prior": [false]}, {"MiniBatchSparsePCA": [1], "Birch": [1], "End": [1], "MiniBatchSparsePCA_ridge_alpha": [-0.017902511309715416], "MiniBatchSparsePCA_n_iter": [159], "MiniBatchSparsePCA_batch_size": [5], "MiniBatchSparsePCA_shuffle": [false], "MiniBatchSparsePCA_method": [1], "Birch_threshold": [-2.4771467529368474], "Birch_branching_factor": [2], "Birch_n_clusters": [4], "Birch_compute_labels": [true]}, {"MeanShift": [1], "End": [1], "MeanShift_bin_seeding": [true], "MeanShift_cluster_all": [true]}, {"LocallyLinearEmbedding": [1], "LogisticRegression": [1], "End": [1], "LocallyLinearEmbedding_n_neighbors": [1], "LocallyLinearEmbedding_n_components": [2], "LocallyLinearEmbedding_reg": [-0.005], "LocallyLinearEmbedding_eigen_solver": [0], "LocallyLinearEmbedding_method": [1], "LocallyLinearEmbedding_neighbors_algorithm": [2], "LogisticRegression_penalty": [1], "LogisticRegression_dual": [true], "LogisticRegression_C": [9.751216149246034], "LogisticRegression_fit_intercept": [false], "LogisticRegression_solver": [3], "LogisticRegression_multi_class": [1]}, {"KMeans": [1], "End": [1], "KMeans_n_clusters": [1], "KMeans_init": [0], "KMeans_precompute_distances": [0]}, {"KNNImputer": [1], "TfidfTransformer": [1], "LogisticRegression": [1], "End": [1], "KNNImputer_n_neighbors": [8], "KNNImputer_weights": [0], "KNNImputer_metric": [0], "KNNImputer_add_indicator": [true], "TfidfTransformer_norm": [1], "TfidfTransformer_use_idf": [false], "TfidfTransformer_smooth_idf": [true], "TfidfTransformer_sublinear_tf": [true], "LogisticRegression_penalty": [1], "LogisticRegression_dual": [true], "LogisticRegression_C": [6.574968361553077], "LogisticRegression_fit_intercept": [true], "LogisticRegression_solver": [3], "LogisticRegression_multi_class": [1]}, {"ComplementNB": [1], "End": [1], "ComplementNB_fit_prior": [false], "ComplementNB_norm": [true]}, {"LogisticRegression": [1], "End": [1], "LogisticRegression_penalty": [1], "LogisticRegression_dual": [true], "LogisticRegression_C": [4.062552232729145], "LogisticRegression_fit_intercept": [false], "LogisticRegression_solver": [2], "LogisticRegression_multi_class": [0]}, {"SparsePCA": [1], "KNeighborsClassifier": [1], "End": [1], "SparsePCA_ridge_alpha": [0.0800415555404037], "SparsePCA_method": [1], "KNeighborsClassifier_n_neighbors": [8], "KNeighborsClassifier_weights": [0], "KNeighborsClassifier_algorithm": [3], "KNeighborsClassifier_leaf_size": [1], "KNeighborsClassifier_p": [2], "KNeighborsClassifier_metric": [0]}, {"ExtraTreeClassifier": [1], "End": [1], "ExtraTreeClassifier_min_samples_split": [3], "ExtraTreeClassifier_min_weight_fraction_leaf": [0.0], "ExtraTreeClassifier_min_impurity_decrease": [0.0], "ExtraTreeClassifier_ccp_alpha": [0.992]}, {"LinearSVC": [1], "End": [1], "LinearSVC_penalty": [0], "LinearSVC_loss": [1], "LinearSVC_dual": [true], "LinearSVC_C": [0.005], "LinearSVC_multi_class": [0], "LinearSVC_fit_intercept": [true]}, {"NearestCentroid": [1], "End": [1]}, {"MinMaxScaler": [1], "LogisticRegression": [1], "End": [1], "LogisticRegression_penalty": [1], "LogisticRegression_dual": [false], "LogisticRegression_C": [2.4659995442295344], "LogisticRegression_fit_intercept": [true], "LogisticRegression_solver": [2], "LogisticRegression_multi_class": [1]}, {"SGDClassifier": [1], "End": [1], "SGDClassifier_loss": [8], "SGDClassifier_penalty": [0], "SGDClassifier_l1_ratio": [0.999], "SGDClassifier_fit_intercept": [true], "SGDClassifier_tol": [-0.0004307771757500855], "SGDClassifier_shuffle": [true], "SGDClassifier_epsilon": [-0.16694112320311133], "SGDClassifier_learning_rate": [0], "SGDClassifier_eta0": [0.8706218675550925], "SGDClassifier_power_t": [-4.715821589849465], "SGDClassifier_early_stopping": [false], "SGDClassifier_validation_fraction": [0.45470261639670834], "SGDClassifier_n_iter_no_change": [9], "SGDClassifier_average": [false]}], "pipeline_distributions": [{"NuSVC": "UnormalizedWeightParam(value=1)", "LatentDirichletAllocation": "UnormalizedWeightParam(value=1)", "End": "UnormalizedWeightParam(value=1)", "NuSVC_kernel": "DistributionParam(weights=[0.25, 0.25, 0.25, 0.25])", "NuSVC_degree": "MeanDevParam(mean=3.0, dev=4, initial_params=(3.0, 4))", "NuSVC_gamma": "DistributionParam(weights=[0.5, 0.5])", "NuSVC_coef0": "MeanDevParam(mean=0.0, dev=1.984, initial_params=(0.0, 1.984))", "NuSVC_shrinking": "WeightParam(value=0.5)", "NuSVC_probability": "WeightParam(value=0.5)", "NuSVC_cache_size": "MeanDevParam(mean=200.0, dev=398, initial_params=(200.0, 398))", "NuSVC_decision_function_shape": "DistributionParam(weights=[0.5, 0.5])", "NuSVC_break_ties": "WeightParam(value=0.5)"}, {"GaussianNB": "UnormalizedWeightParam(value=1)", "End": "UnormalizedWeightParam(value=1)"}, {"End": "UnormalizedWeightParam(value=16.0)", "LinearSVC": "UnormalizedWeightParam(value=2.15)", "LinearSVC_penalty": "DistributionParam(weights=[1.0])", "LinearSVC_loss": "DistributionParam(weights=[0.23913043478260868, 0.7608695652173914])", "LinearSVC_dual": "WeightParam(value=1.0)", "LinearSVC_C": "MeanDevParam(mean=0.005, dev=0.0, initial_params=[4.998, 9.985999999999999])", "LinearSVC_multi_class": "DistributionParam(weights=[0.7608695652173914, 0.23913043478260868])", "LinearSVC_fit_intercept": "WeightParam(value=1.0)"}, {"End": "UnormalizedWeightParam(value=16.0)", "BernoulliNB": "UnormalizedWeightParam(value=1)", "RadiusNeighborsTransformer": "UnormalizedWeightParam(value=1)", "RadiusNeighborsTransformer_mode": "DistributionParam(weights=[0.5, 0.5])", "RadiusNeighborsTransformer_radius": "MeanDevParam(\n    mean=-0.0019999999999997797,\n    dev=19.985999999999997,\n    initial_params=(-0.0019999999999997797, 19.985999999999997),\n)", "RadiusNeighborsTransformer_algorithm": "DistributionParam(weights=[0.25, 0.25, 0.25, 0.25])", "RadiusNeighborsTransformer_leaf_size": "MeanDevParam(mean=30.0, dev=58, initial_params=(30.0, 58))", "RadiusNeighborsTransformer_p": "MeanDevParam(mean=2.0, dev=2, initial_params=(2.0, 2))", "BernoulliNB_alpha": "MeanDevParam(mean=4.9955, dev=9.991, initial_params=(4.9955, 9.991))", "BernoulliNB_binarize": "MeanDevParam(mean=0.0, dev=1.984, initial_params=(0.0, 1.984))", "BernoulliNB_fit_prior": "WeightParam(value=0.5)"}, {"End": "UnormalizedWeightParam(value=16.0)", "KBinsDiscretizer": "UnormalizedWeightParam(value=2.0)", "KBinsDiscretizer_n_bins": "MeanDevParam(mean=6.0, dev=0.0, initial_params=[5.5, 7.0])", "KBinsDiscretizer_encode": "DistributionParam(weights=[0.75, 0.25])", "KBinsDiscretizer_strategy": "DistributionParam(\n    weights=[0.16666666666666669, 0.6666666666666667, 0.16666666666666669]\n)", "BernoulliNB": "UnormalizedWeightParam(value=1)", "BernoulliNB_alpha": "MeanDevParam(mean=4.9955, dev=9.991, initial_params=(4.9955, 9.991))", "BernoulliNB_binarize": "MeanDevParam(mean=0.0, dev=1.984, initial_params=(0.0, 1.984))", "BernoulliNB_fit_prior": "WeightParam(value=0.5)"}, {"End": "UnormalizedWeightParam(value=16.0)", "KNeighborsClassifier": "UnormalizedWeightParam(value=2.0)", "KNeighborsClassifier_n_neighbors": "MeanDevParam(mean=9.0, dev=0.0, initial_params=[5.0, 8.0])", "KNeighborsClassifier_weights": "DistributionParam(weights=[0.25, 0.75])", "KNeighborsClassifier_algorithm": "DistributionParam(weights=[0.125, 0.125, 0.125, 0.625])", "KNeighborsClassifier_leaf_size": "MeanDevParam(mean=1.0, dev=0.0, initial_params=[30.0, 58.0])", "KNeighborsClassifier_p": "MeanDevParam(mean=3.0, dev=0.0, initial_params=[2.0, 2.0])", "KNeighborsClassifier_metric": "DistributionParam(weights=[1.0])"}, {"End": "UnormalizedWeightParam(value=16.0)", "CategoricalNB": "UnormalizedWeightParam(value=3.0)", "CategoricalNB_fit_prior": "WeightParam(value=1.0)"}, {"End": "UnormalizedWeightParam(value=16.0)", "FastICA": "UnormalizedWeightParam(value=2.0)", "FastICA_algorithm": "DistributionParam(weights=[0.25, 0.75])", "FastICA_whiten": "WeightParam(value=0.0)", "FastICA_fun": "DistributionParam(\n    weights=[0.16666666666666669, 0.6666666666666667, 0.16666666666666669]\n)", "LogisticRegression": "UnormalizedWeightParam(value=5.0)", "LogisticRegression_penalty": "DistributionParam(weights=[0.3, 0.7])", "LogisticRegression_dual": "WeightParam(value=0.75)", "LogisticRegression_C": "MeanDevParam(\n    mean=7.447516963796163,\n    dev=4.962468830102887,\n    initial_params=[4.998, 9.985999999999999],\n)", "LogisticRegression_fit_intercept": "WeightParam(value=0.5)", "LogisticRegression_solver": "DistributionParam(weights=[0.25, 0.25, 0.25, 0.25])", "LogisticRegression_multi_class": "DistributionParam(weights=[0.4666666666666667, 0.4666666666666667, 0.06666666666666668])", "RadiusNeighborsTransformer": "UnormalizedWeightParam(value=1)", "RadiusNeighborsTransformer_mode": "DistributionParam(weights=[0.5, 0.5])", "RadiusNeighborsTransformer_radius": "MeanDevParam(\n    mean=-0.0019999999999997797,\n    dev=19.985999999999997,\n    initial_params=(-0.0019999999999997797, 19.985999999999997),\n)", "RadiusNeighborsTransformer_algorithm": "DistributionParam(weights=[0.25, 0.25, 0.25, 0.25])", "RadiusNeighborsTransformer_leaf_size": "MeanDevParam(mean=30.0, dev=58, initial_params=(30.0, 58))", "RadiusNeighborsTransformer_p": "MeanDevParam(mean=2.0, dev=2, initial_params=(2.0, 2))"}, {"End": "UnormalizedWeightParam(value=16.0)", "LatentDirichletAllocation": "UnormalizedWeightParam(value=2.0)", "PassiveAggressiveClassifier": "UnormalizedWeightParam(value=1)", "RadiusNeighborsTransformer": "UnormalizedWeightParam(value=1)", "RadiusNeighborsTransformer_mode": "DistributionParam(weights=[0.5, 0.5])", "RadiusNeighborsTransformer_radius": "MeanDevParam(\n    mean=-0.0019999999999997797,\n    dev=19.985999999999997,\n    initial_params=(-0.0019999999999997797, 19.985999999999997),\n)", "RadiusNeighborsTransformer_algorithm": "DistributionParam(weights=[0.25, 0.25, 0.25, 0.25])", "RadiusNeighborsTransformer_leaf_size": "MeanDevParam(mean=30.0, dev=58, initial_params=(30.0, 58))", "RadiusNeighborsTransformer_p": "MeanDevParam(mean=2.0, dev=2, initial_params=(2.0, 2))", "PassiveAggressiveClassifier_C": "MeanDevParam(\n    mean=-0.0019999999999997797,\n    dev=19.985999999999997,\n    initial_params=(-0.0019999999999997797, 19.985999999999997),\n)", "PassiveAggressiveClassifier_fit_intercept": "WeightParam(value=0.5)", "PassiveAggressiveClassifier_tol": "MeanDevParam(mean=-0.002, dev=0.006, initial_params=(-0.002, 0.006))", "PassiveAggressiveClassifier_early_stopping": "WeightParam(value=0.5)", "PassiveAggressiveClassifier_validation_fraction": "MeanDevParam(mean=0.4995, dev=0.987, initial_params=(0.4995, 0.987))", "PassiveAggressiveClassifier_n_iter_no_change": "MeanDevParam(mean=5.0, dev=8, initial_params=(5.0, 8))", "PassiveAggressiveClassifier_shuffle": "WeightParam(value=0.5)", "PassiveAggressiveClassifier_average": "WeightParam(value=0.5)"}, {"Birch": "UnormalizedWeightParam(value=2.0)", "End": "UnormalizedWeightParam(value=16.0)", "Birch_threshold": "MeanDevParam(\n    mean=-2.4771467529368474, dev=0.0, initial_params=[-0.002000000000000224, 9.986]\n)", "Birch_branching_factor": "MeanDevParam(mean=2.0, dev=0.0, initial_params=[50.5, 97.0])", "Birch_n_clusters": "MeanDevParam(mean=4.0, dev=0.0, initial_params=[3.0, 4.0])", "Birch_compute_labels": "WeightParam(value=1.0)"}, {"End": "UnormalizedWeightParam(value=16.0)", "KMeans": "UnormalizedWeightParam(value=1)", "NMF": "UnormalizedWeightParam(value=1)", "NMF_alpha": "MeanDevParam(mean=0.0, dev=0.0, initial_params=(0.0, 0.0))", "NMF_l1_ratio": "MeanDevParam(mean=0.0, dev=0.0, initial_params=(0.0, 0.0))", "NMF_shuffle": "WeightParam(value=0.5)", "KMeans_n_clusters": "MeanDevParam(mean=8.0, dev=14, initial_params=(8.0, 14))", "KMeans_init": "DistributionParam(weights=[1.0])", "KMeans_precompute_distances": "DistributionParam(weights=[1.0])"}, {"End": "UnormalizedWeightParam(value=16.0)", "KNNImputer": "UnormalizedWeightParam(value=2.0)", "KNNImputer_n_neighbors": "MeanDevParam(mean=9.0, dev=0.0, initial_params=[5.0, 8.0])", "KNNImputer_weights": "DistributionParam(weights=[0.75, 0.25])", "KNNImputer_metric": "DistributionParam(weights=[1.0])", "KNNImputer_add_indicator": "WeightParam(value=1.0)", "KNeighborsClassifier": "UnormalizedWeightParam(value=2.0)", "KNeighborsClassifier_n_neighbors": "MeanDevParam(mean=9.0, dev=0.0, initial_params=[5.0, 8.0])", "KNeighborsClassifier_weights": "DistributionParam(weights=[0.25, 0.75])", "KNeighborsClassifier_algorithm": "DistributionParam(weights=[0.125, 0.125, 0.125, 0.625])", "KNeighborsClassifier_leaf_size": "MeanDevParam(mean=1.0, dev=0.0, initial_params=[30.0, 58.0])", "KNeighborsClassifier_p": "MeanDevParam(mean=3.0, dev=0.0, initial_params=[2.0, 2.0])", "KNeighborsClassifier_metric": "DistributionParam(weights=[1.0])"}, {"End": "UnormalizedWeightParam(value=16.0)", "KerasClassifier": "UnormalizedWeightParam(value=2.0)", "KerasClassifier_optimizer": "DistributionParam(\n    weights=[0.16666666666666666, 0.16666666666666666, 0.6666666666666666]\n)", "production_7": "UnormalizedWeightParam(value=2.0)", "production_8": "UnormalizedWeightParam(value=2.0)", "production_9": "UnormalizedWeightParam(value=9.0)", "production_10": "UnormalizedWeightParam(value=5.0)", "production_11": "UnormalizedWeightParam(value=4.0)", "production_12": "UnormalizedWeightParam(value=2.0)"}, {"End": "UnormalizedWeightParam(value=16.0)", "ComplementNB": "UnormalizedWeightParam(value=2.0)", "ComplementNB_fit_prior": "WeightParam(value=0.0)", "ComplementNB_norm": "WeightParam(value=1.0)", "SparsePCA": "UnormalizedWeightParam(value=2.0)", "SparsePCA_ridge_alpha": "MeanDevParam(\n    mean=0.0800415555404037, dev=0.0, initial_params=[0.0005000000000000004, 0.187]\n)", "SparsePCA_method": "DistributionParam(weights=[0.75, 0.25])"}, {"End": "UnormalizedWeightParam(value=16.0)", "FastICA": "UnormalizedWeightParam(value=2.0)", "FastICA_algorithm": "DistributionParam(weights=[0.25, 0.75])", "FastICA_whiten": "WeightParam(value=0.0)", "FastICA_fun": "DistributionParam(\n    weights=[0.16666666666666669, 0.6666666666666667, 0.16666666666666669]\n)", "MultinomialNB": "UnormalizedWeightParam(value=2.0)", "MultinomialNB_fit_prior": "WeightParam(value=0.0)"}, {"End": "UnormalizedWeightParam(value=16.0)", "DecisionTreeClassifier": "UnormalizedWeightParam(value=2.0)", "DecisionTreeClassifier_min_samples_split": "MeanDevParam(mean=2.0, dev=0.0, initial_params=[2.5, 1.0])", "DecisionTreeClassifier_min_weight_fraction_leaf": "MeanDevParam(mean=0.0, dev=0.0, initial_params=[0.25, 0.5])", "DecisionTreeClassifier_min_impurity_decrease": "MeanDevParam(mean=0.4552573957735166, dev=0.0, initial_params=[0.496, 0.992])", "DecisionTreeClassifier_ccp_alpha": "MeanDevParam(mean=0.992, dev=0.0, initial_params=[0.496, 0.992])"}, {"End": "UnormalizedWeightParam(value=16.0)", "LogisticRegression": "UnormalizedWeightParam(value=5.0)", "LogisticRegression_penalty": "DistributionParam(weights=[0.3, 0.7])", "LogisticRegression_dual": "WeightParam(value=0.75)", "LogisticRegression_C": "MeanDevParam(\n    mean=7.447516963796163,\n    dev=4.962468830102887,\n    initial_params=[4.998, 9.985999999999999],\n)", "LogisticRegression_fit_intercept": "WeightParam(value=0.5)", "LogisticRegression_solver": "DistributionParam(weights=[0.25, 0.25, 0.25, 0.25])", "LogisticRegression_multi_class": "DistributionParam(weights=[0.4666666666666667, 0.4666666666666667, 0.06666666666666668])", "RobustScaler": "UnormalizedWeightParam(value=1)", "RobustScaler_with_centering": "WeightParam(value=0.5)", "RobustScaler_with_scaling": "WeightParam(value=0.5)"}, {"End": "UnormalizedWeightParam(value=16.0)", "LogisticRegression": "UnormalizedWeightParam(value=5.0)", "LogisticRegression_penalty": "DistributionParam(weights=[0.3, 0.7])", "LogisticRegression_dual": "WeightParam(value=0.75)", "LogisticRegression_C": "MeanDevParam(\n    mean=7.447516963796163,\n    dev=4.962468830102887,\n    initial_params=[4.998, 9.985999999999999],\n)", "LogisticRegression_fit_intercept": "WeightParam(value=0.5)", "LogisticRegression_solver": "DistributionParam(weights=[0.25, 0.25, 0.25, 0.25])", "LogisticRegression_multi_class": "DistributionParam(weights=[0.4666666666666667, 0.4666666666666667, 0.06666666666666668])", "KernelPCA": "UnormalizedWeightParam(value=1)", "KernelPCA_degree": "MeanDevParam(mean=3.0, dev=4, initial_params=(3.0, 4))", "KernelPCA_alpha": "MeanDevParam(\n    mean=-0.0019999999999997797,\n    dev=19.985999999999997,\n    initial_params=(-0.0019999999999997797, 19.985999999999997),\n)", "KernelPCA_fit_inverse_transform": "WeightParam(value=0.5)", "KernelPCA_eigen_solver": "DistributionParam(weights=[0.3333333333333333, 0.3333333333333333, 0.3333333333333333])", "KernelPCA_tol": "MeanDevParam(mean=0.0, dev=198, initial_params=(0.0, 198))", "KernelPCA_remove_zero_eig": "WeightParam(value=0.5)"}, {"End": "UnormalizedWeightParam(value=16.0)", "SVC": "UnormalizedWeightParam(value=1)", "SVC_C": "MeanDevParam(\n    mean=4.998, dev=9.985999999999999, initial_params=(4.998, 9.985999999999999)\n)", "SVC_degree": "MeanDevParam(mean=3.0, dev=4, initial_params=(3.0, 4))", "SVC_gamma": "DistributionParam(weights=[0.5, 0.5])", "SVC_coef0": "MeanDevParam(mean=0.0, dev=1.984, initial_params=(0.0, 1.984))", "SVC_shrinking": "WeightParam(value=0.5)", "SVC_probability": "WeightParam(value=0.5)", "SVC_cache_size": "MeanDevParam(mean=200.0, dev=398, initial_params=(200.0, 398))", "SVC_decision_function_shape": "DistributionParam(weights=[0.5, 0.5])", "SVC_break_ties": "WeightParam(value=0.5)"}, {"End": "UnormalizedWeightParam(value=16.0)", "MultinomialNB": "UnormalizedWeightParam(value=2.0)", "MultinomialNB_fit_prior": "WeightParam(value=0.0)"}, {"Perceptron": "UnormalizedWeightParam(value=1)", "MinMaxScaler": "UnormalizedWeightParam(value=1)", "End": "UnormalizedWeightParam(value=1)", "Perceptron_fit_intercept": "WeightParam(value=0.5)", "Perceptron_tol": "MeanDevParam(mean=-0.002, dev=0.006, initial_params=(-0.002, 0.006))", "Perceptron_shuffle": "WeightParam(value=0.5)", "Perceptron_eta0": "MeanDevParam(\n    mean=4.998, dev=9.985999999999999, initial_params=(4.998, 9.985999999999999)\n)", "Perceptron_early_stopping": "WeightParam(value=0.5)", "Perceptron_validation_fraction": "MeanDevParam(mean=0.4995, dev=0.987, initial_params=(0.4995, 0.987))", "Perceptron_n_iter_no_change": "MeanDevParam(mean=5.0, dev=8, initial_params=(5.0, 8))"}, {"RadiusNeighborsTransformer": "UnormalizedWeightParam(value=1)", "Birch": "UnormalizedWeightParam(value=1)", "FeatureAgglomeration": "UnormalizedWeightParam(value=1)", "End": "UnormalizedWeightParam(value=1)", "FeatureAgglomeration_n_clusters": "MeanDevParam(mean=2.0, dev=2, initial_params=(2.0, 2))", "FeatureAgglomeration_affinity": "DistributionParam(weights=[1.0])", "FeatureAgglomeration_compute_full_tree": "DistributionParam(weights=[1.0])", "FeatureAgglomeration_linkage": "DistributionParam(weights=[0.25, 0.25, 0.25, 0.25])", "RadiusNeighborsTransformer_mode": "DistributionParam(weights=[0.5, 0.5])", "RadiusNeighborsTransformer_radius": "MeanDevParam(\n    mean=-0.0019999999999997797,\n    dev=19.985999999999997,\n    initial_params=(-0.0019999999999997797, 19.985999999999997),\n)", "RadiusNeighborsTransformer_algorithm": "DistributionParam(weights=[0.25, 0.25, 0.25, 0.25])", "RadiusNeighborsTransformer_leaf_size": "MeanDevParam(mean=30.0, dev=58, initial_params=(30.0, 58))", "RadiusNeighborsTransformer_p": "MeanDevParam(mean=2.0, dev=2, initial_params=(2.0, 2))", "Birch_threshold": "MeanDevParam(\n    mean=-0.002000000000000224, dev=9.986, initial_params=(-0.002000000000000224, 9.986)\n)", "Birch_branching_factor": "MeanDevParam(mean=50.5, dev=97, initial_params=(50.5, 97))", "Birch_n_clusters": "MeanDevParam(mean=3.0, dev=4, initial_params=(3.0, 4))", "Birch_compute_labels": "WeightParam(value=0.5)"}, {"End": "UnormalizedWeightParam(value=16.2)", "LogisticRegression": "UnormalizedWeightParam(value=5.0)", "LogisticRegression_penalty": "DistributionParam(weights=[0.3, 0.7])", "LogisticRegression_dual": "WeightParam(value=0.75)", "LogisticRegression_C": "MeanDevParam(\n    mean=7.447516963796163,\n    dev=4.962468830102887,\n    initial_params=[4.998, 9.985999999999999],\n)", "LogisticRegression_fit_intercept": "WeightParam(value=0.5)", "LogisticRegression_solver": "DistributionParam(weights=[0.25, 0.25, 0.25, 0.25])", "LogisticRegression_multi_class": "DistributionParam(weights=[0.4666666666666667, 0.4666666666666667, 0.06666666666666668])"}, {"End": "UnormalizedWeightParam(value=16.2)", "LatentDirichletAllocation": "UnormalizedWeightParam(value=2.0)", "LinearSVC": "UnormalizedWeightParam(value=2.1999999999999997)", "LinearSVC_penalty": "DistributionParam(weights=[1.0])", "LinearSVC_loss": "DistributionParam(weights=[0.22774327122153207, 0.772256728778468])", "LinearSVC_dual": "WeightParam(value=1.0)", "LinearSVC_C": "MeanDevParam(mean=0.005, dev=0.0, initial_params=[4.998, 9.985999999999999])", "LinearSVC_multi_class": "DistributionParam(weights=[0.772256728778468, 0.22774327122153207])", "LinearSVC_fit_intercept": "WeightParam(value=1.0)"}, {"Birch": "UnormalizedWeightParam(value=2.0)", "End": "UnormalizedWeightParam(value=16.2)", "Birch_threshold": "MeanDevParam(\n    mean=-2.4771467529368474, dev=0.0, initial_params=[-0.002000000000000224, 9.986]\n)", "Birch_branching_factor": "MeanDevParam(mean=2.0, dev=0.0, initial_params=[50.5, 97.0])", "Birch_n_clusters": "MeanDevParam(mean=4.0, dev=0.0, initial_params=[3.0, 4.0])", "Birch_compute_labels": "WeightParam(value=1.0)"}, {"End": "UnormalizedWeightParam(value=16.2)", "MultinomialNB": "UnormalizedWeightParam(value=2.0)", "MultinomialNB_fit_prior": "WeightParam(value=0.0)", "KernelCenterer": "UnormalizedWeightParam(value=2.0)"}, {"Birch": "UnormalizedWeightParam(value=2.0)", "End": "UnormalizedWeightParam(value=16.2)", "Birch_threshold": "MeanDevParam(\n    mean=-2.4771467529368474, dev=0.0, initial_params=[-0.002000000000000224, 9.986]\n)", "Birch_branching_factor": "MeanDevParam(mean=2.0, dev=0.0, initial_params=[50.5, 97.0])", "Birch_n_clusters": "MeanDevParam(mean=4.0, dev=0.0, initial_params=[3.0, 4.0])", "Birch_compute_labels": "WeightParam(value=1.0)", "MiniBatchSparsePCA": "UnormalizedWeightParam(value=2.0)", "MiniBatchSparsePCA_ridge_alpha": "MeanDevParam(\n    mean=-0.017902511309715416, dev=0.0, initial_params=[0.0005000000000000004, 0.187]\n)", "MiniBatchSparsePCA_n_iter": "MeanDevParam(mean=159.0, dev=0.0, initial_params=[100.0, 198.0])", "MiniBatchSparsePCA_batch_size": "MeanDevParam(mean=5.0, dev=0.0, initial_params=[3.0, 4.0])", "MiniBatchSparsePCA_shuffle": "WeightParam(value=0.0)", "MiniBatchSparsePCA_method": "DistributionParam(weights=[0.25, 0.75])"}, {"End": "UnormalizedWeightParam(value=16.2)", "MeanShift": "UnormalizedWeightParam(value=1)", "MeanShift_bin_seeding": "WeightParam(value=0.5)", "MeanShift_cluster_all": "WeightParam(value=0.5)"}, {"LocallyLinearEmbedding": "UnormalizedWeightParam(value=4.0)", "End": "UnormalizedWeightParam(value=16.2)", "LocallyLinearEmbedding_n_neighbors": "MeanDevParam(mean=1.0, dev=0.0, initial_params=[5.0, 8.0])", "LocallyLinearEmbedding_n_components": "MeanDevParam(mean=2.0, dev=1.0, initial_params=[2.0, 2.0])", "LocallyLinearEmbedding_reg": "MeanDevParam(\n    mean=-0.0029591090685498088, dev=0.00216024799549859, initial_params=[-0.002, 0.006]\n)", "LocallyLinearEmbedding_eigen_solver": "DistributionParam(\n    weights=[0.33333333333333337, 0.5833333333333334, 0.08333333333333334]\n)", "LocallyLinearEmbedding_method": "DistributionParam(\n    weights=[0.33333333333333337, 0.5833333333333334, 0.08333333333333334]\n)", "LocallyLinearEmbedding_neighbors_algorithm": "DistributionParam(weights=[0.3125, 0.0625, 0.3125, 0.3125])", "LogisticRegression": "UnormalizedWeightParam(value=5.0)", "LogisticRegression_penalty": "DistributionParam(weights=[0.3, 0.7])", "LogisticRegression_dual": "WeightParam(value=0.75)", "LogisticRegression_C": "MeanDevParam(\n    mean=7.447516963796163,\n    dev=4.962468830102887,\n    initial_params=[4.998, 9.985999999999999],\n)", "LogisticRegression_fit_intercept": "WeightParam(value=0.5)", "LogisticRegression_solver": "DistributionParam(weights=[0.25, 0.25, 0.25, 0.25])", "LogisticRegression_multi_class": "DistributionParam(weights=[0.4666666666666667, 0.4666666666666667, 0.06666666666666668])"}, {"End": "UnormalizedWeightParam(value=16.2)", "KMeans": "UnormalizedWeightParam(value=1)", "KMeans_n_clusters": "MeanDevParam(mean=8.0, dev=14, initial_params=(8.0, 14))", "KMeans_init": "DistributionParam(weights=[1.0])", "KMeans_precompute_distances": "DistributionParam(weights=[1.0])"}, {"End": "UnormalizedWeightParam(value=16.2)", "LogisticRegression": "UnormalizedWeightParam(value=5.0)", "KNNImputer": "UnormalizedWeightParam(value=2.05)", "KNNImputer_n_neighbors": "MeanDevParam(mean=8.999999999999998, dev=0.0, initial_params=[5.0, 8.0])", "KNNImputer_weights": "DistributionParam(weights=[0.7619047619047619, 0.23809523809523808])", "KNNImputer_metric": "DistributionParam(weights=[1.0])", "KNNImputer_add_indicator": "WeightParam(value=1.0)", "LogisticRegression_penalty": "DistributionParam(weights=[0.3, 0.7])", "LogisticRegression_dual": "WeightParam(value=0.75)", "LogisticRegression_C": "MeanDevParam(\n    mean=7.447516963796163,\n    dev=4.962468830102887,\n    initial_params=[4.998, 9.985999999999999],\n)", "LogisticRegression_fit_intercept": "WeightParam(value=0.5)", "LogisticRegression_solver": "DistributionParam(weights=[0.25, 0.25, 0.25, 0.25])", "LogisticRegression_multi_class": "DistributionParam(weights=[0.4666666666666667, 0.4666666666666667, 0.06666666666666668])", "TfidfTransformer": "UnormalizedWeightParam(value=2.0)", "TfidfTransformer_norm": "DistributionParam(weights=[0.25, 0.75])", "TfidfTransformer_use_idf": "WeightParam(value=0.0)", "TfidfTransformer_smooth_idf": "WeightParam(value=1.0)", "TfidfTransformer_sublinear_tf": "WeightParam(value=1.0)"}, {"End": "UnormalizedWeightParam(value=16.2)", "ComplementNB": "UnormalizedWeightParam(value=2.0)", "ComplementNB_fit_prior": "WeightParam(value=0.0)", "ComplementNB_norm": "WeightParam(value=1.0)"}, {"End": "UnormalizedWeightParam(value=16.2)", "LogisticRegression": "UnormalizedWeightParam(value=5.0)", "LogisticRegression_penalty": "DistributionParam(weights=[0.3, 0.7])", "LogisticRegression_dual": "WeightParam(value=0.75)", "LogisticRegression_C": "MeanDevParam(\n    mean=7.447516963796163,\n    dev=4.962468830102887,\n    initial_params=[4.998, 9.985999999999999],\n)", "LogisticRegression_fit_intercept": "WeightParam(value=0.5)", "LogisticRegression_solver": "DistributionParam(weights=[0.25, 0.25, 0.25, 0.25])", "LogisticRegression_multi_class": "DistributionParam(weights=[0.4666666666666667, 0.4666666666666667, 0.06666666666666668])"}, {"End": "UnormalizedWeightParam(value=16.2)", "SparsePCA": "UnormalizedWeightParam(value=2.0)", "KNeighborsClassifier": "UnormalizedWeightParam(value=2.1)", "SparsePCA_ridge_alpha": "MeanDevParam(\n    mean=0.0800415555404037, dev=0.0, initial_params=[0.0005000000000000004, 0.187]\n)", "SparsePCA_method": "DistributionParam(weights=[0.75, 0.25])", "KNeighborsClassifier_n_neighbors": "MeanDevParam(mean=8.999999999999998, dev=0.0, initial_params=[5.0, 8.0])", "KNeighborsClassifier_weights": "DistributionParam(weights=[0.2727272727272727, 0.7272727272727273])", "KNeighborsClassifier_algorithm": "DistributionParam(\n    weights=[\n        0.11363636363636363,\n        0.11363636363636363,\n        0.15909090909090906,\n        0.6136363636363636,\n    ]\n)", "KNeighborsClassifier_leaf_size": "MeanDevParam(mean=1.0, dev=0.0, initial_params=[30.0, 58.0])", "KNeighborsClassifier_p": "MeanDevParam(mean=2.9999999999999996, dev=0.0, initial_params=[2.0, 2.0])", "KNeighborsClassifier_metric": "DistributionParam(weights=[1.0])"}, {"End": "UnormalizedWeightParam(value=16.2)", "ExtraTreeClassifier": "UnormalizedWeightParam(value=2.0)", "ExtraTreeClassifier_min_samples_split": "MeanDevParam(mean=3.0, dev=0.0, initial_params=[2.5, 1.0])", "ExtraTreeClassifier_min_weight_fraction_leaf": "MeanDevParam(mean=0.0, dev=0.0, initial_params=[0.25, 0.5])", "ExtraTreeClassifier_min_impurity_decrease": "MeanDevParam(mean=0.0, dev=0.0, initial_params=[0.496, 0.992])", "ExtraTreeClassifier_ccp_alpha": "MeanDevParam(mean=0.992, dev=0.0, initial_params=[0.496, 0.992])"}, {"End": "UnormalizedWeightParam(value=16.2)", "LinearSVC": "UnormalizedWeightParam(value=2.1999999999999997)", "LinearSVC_penalty": "DistributionParam(weights=[1.0])", "LinearSVC_loss": "DistributionParam(weights=[0.22774327122153207, 0.772256728778468])", "LinearSVC_dual": "WeightParam(value=1.0)", "LinearSVC_C": "MeanDevParam(mean=0.005, dev=0.0, initial_params=[4.998, 9.985999999999999])", "LinearSVC_multi_class": "DistributionParam(weights=[0.772256728778468, 0.22774327122153207])", "LinearSVC_fit_intercept": "WeightParam(value=1.0)"}, {"End": "UnormalizedWeightParam(value=16.2)", "NearestCentroid": "UnormalizedWeightParam(value=2.0)"}, {"End": "UnormalizedWeightParam(value=16.2)", "LogisticRegression": "UnormalizedWeightParam(value=5.0)", "LogisticRegression_penalty": "DistributionParam(weights=[0.3, 0.7])", "LogisticRegression_dual": "WeightParam(value=0.75)", "LogisticRegression_C": "MeanDevParam(\n    mean=7.447516963796163,\n    dev=4.962468830102887,\n    initial_params=[4.998, 9.985999999999999],\n)", "LogisticRegression_fit_intercept": "WeightParam(value=0.5)", "LogisticRegression_solver": "DistributionParam(weights=[0.25, 0.25, 0.25, 0.25])", "LogisticRegression_multi_class": "DistributionParam(weights=[0.4666666666666667, 0.4666666666666667, 0.06666666666666668])", "MinMaxScaler": "UnormalizedWeightParam(value=1)"}, {"End": "UnormalizedWeightParam(value=16.2)", "SGDClassifier": "UnormalizedWeightParam(value=1)", "SGDClassifier_loss": "DistributionParam(\n    weights=[\n        0.1111111111111111,\n        0.1111111111111111,\n        0.1111111111111111,\n        0.1111111111111111,\n        0.1111111111111111,\n        0.1111111111111111,\n        0.1111111111111111,\n        0.1111111111111111,\n        0.1111111111111111,\n    ]\n)", "SGDClassifier_penalty": "DistributionParam(weights=[0.3333333333333333, 0.3333333333333333, 0.3333333333333333])", "SGDClassifier_l1_ratio": "MeanDevParam(mean=0.5, dev=0.998, initial_params=(0.5, 0.998))", "SGDClassifier_fit_intercept": "WeightParam(value=0.5)", "SGDClassifier_tol": "MeanDevParam(mean=-0.002, dev=0.006, initial_params=(-0.002, 0.006))", "SGDClassifier_shuffle": "WeightParam(value=0.5)", "SGDClassifier_epsilon": "MeanDevParam(\n    mean=0.0005000000000000004,\n    dev=1.9849999999999999,\n    initial_params=(0.0005000000000000004, 1.9849999999999999),\n)", "SGDClassifier_learning_rate": "DistributionParam(weights=[1.0])", "SGDClassifier_eta0": "MeanDevParam(mean=0.0, dev=1.984, initial_params=(0.0, 1.984))", "SGDClassifier_power_t": "MeanDevParam(\n    mean=-0.002000000000000224, dev=9.986, initial_params=(-0.002000000000000224, 9.986)\n)", "SGDClassifier_early_stopping": "WeightParam(value=0.5)", "SGDClassifier_validation_fraction": "MeanDevParam(mean=0.4995, dev=0.987, initial_params=(0.4995, 0.987))", "SGDClassifier_n_iter_no_change": "MeanDevParam(mean=5.0, dev=8, initial_params=(5.0, 8))", "SGDClassifier_average": "WeightParam(value=0.5)"}], "generations": [0, 20, 39], "best_fn": 0.9905100830367735}